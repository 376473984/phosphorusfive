

* gzip javascript files through pre-build step on Release-Linux

* create unit tests

* create support for saving class.id in control state for dynamically added widgets, such that dynamically added widgets will
  be automatically re-created during postbacks

* create cache of MethodInfo to use in InvokeEventHandler to optimize use of reflection, and investigate if we can get completely rid 
  of reflection, since it requires "partial trust" on server, which is not supplied by all web hotels for instance

* move all public methods at the top, then all protected, then all private methods, in all classes, and check up the dox for all methods

* store viewstate in session feature on AjaxPage through boolean property

* investigate possibility of creating comet/lazyhttp support

* adding javascript in ajax postbacks that will be sent from server to client

* adding javascript files, and css, plus other types of headers in ajax postback

* create option to remove unnecssary whitespaces in html sent in HtmlFilter, investigate if this is possible first though

* make sure script inclusions by default don't mess up spacing in html filter

* create possibility of creating global page level "onbefore", "onsuccess" and "oneror" handlers in javascript

* modify readme to have fully functioning complete example of Default.aspx page, with complete codebehind, and complete .aspx markup

* create "void element" as a third alternative to Literal and Container to cover all cases, since it is useful for input elements and such

* make sure input types do NOT return their values as json, investigate if possible to remove values also from viewstate

* make sure Widget does not save Visible in ControlState unless it is invisible ...

* make only added controls and removed controls render in CreatePersistentControl and RemovedControl

* consolidate HasEndTag with SelfClosed to become enum

* partial update of single controls when Container had dynamically added children to its collection

* implement html5 tag widgets for all html5 tags

* check if all and only all static controls exists in Containerr controls collection, and if so, set "_manage" to false, and skip 
  viewstate serialization of control collection logic






================================================================================

             unit tests that needs to be created

================================================================================

   - attributes

* add on attribute, and very dom gets updated

* add one attribute, remove it, and verify viewstate is set back to original value

* add one null attribute, and verify dom gets updated

* add same attribute on server multiple times and verify the server only creates one, both in dom, and on server

* add on attribute, remove it in the same server request, and verify nothing is rendered back to client

* change one attribute, and verify dom gets updated

* change one attribute, change it back to what it was in the same request, and verify nothing gets rendered


   - dynamic controls

* add to collection that contains static controls

* add to empty collection

* remove from static collection

* remove from empty collection that had item added




