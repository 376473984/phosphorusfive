
TODO before release
===================

* Dox for all projects

* Clean up the p5.core Utilities class!

* Investigate the p5.threading, and find out why [fork] is not the root node, when using a [wait] invocation. Which MIGHT be the corrrect way to
  do things, but make sure!!

* Investigate why a "shared reference node" won't have its reference node updated for multiple [fork] inside of a single [wait]

* Simplify p5.mail and p5.mime

* Finish dox for p5.mime, p5.strings, and all other projects

* Consider moving "PGP key" Active Events into p5.crypto ...?

* Create some sort of "persistent login" (remember me functionality)

* Make sure p5.data cannot access nodes from root or file nodes (minimum /*/* expressions)

* Consider documenting all Active Events by adding a [_dox] node, allowing consumers to invoke them with [add] trickery to retrieve dox.

* Replace Hyperlambda parser, with option to preserve comments as [#comment] nodes, such that we can parse files, without loosing comments,
  and create automated refactoring features, etc. Also make it more stable. It's not 100% today ...

* Create sample folder in System42, with some example lambda pages, showing of some feature for users.

* Make support for children widgets in tree view widget.

* Create [lambda2xml] and [p5.csv.lambda2csv] events.

* Unit tests for XML/HTML and CSV files.

* Clean up all of the above conversion projects.

* Create [delete-from-row-id] for Datagrid widget.

* Create [trim-left], [trim-right] and [concatenate] events for string manipulation.

* Icon support for Navbar through _class on items. Also add support for other types of widgets, such as textbox search, buttons, etc...

* Make sure all widgets that are crawlable use the same "get URL" logic, if we can ...

* Also, make all extension widgets lambda events become global active events. This allows us to get intellisense, in addition to that it is stupid
  repeating the same active event for each object of widget type. (eats up more resources)

* Make sure datagrid can be set into "read only" mode, without neither [.on-edit-item] nor [.on-select-items]

* Use ReaderWriteLockSlim in p5.data, and other places where we create locks.

* Fix HTML filter, it sometimes chokes.

* Verify we really need [p5.web.widgets.property.delete], which I think we do, since properties can have "null" values.

* Consider creating p5.http, possibly rename p5.net, and move [url-decode]/encode into this project.

* Change the [src] and [dest] argument names to [p5.string.replace] to something more intuitive.

* Change the [chars] argument in [p5.string.trim] to something more intuitive.

