
/*
 * Searches for images matching given [_query], and displays these in given [_widget].
 * Using [_onsearch] as callback for retrieving images, expecting to take [_start], [_end] and [_query],
 * which are also expected to be supplied to file during invocation.
 *
 * [_onsearch] is expected to return a list of [image]'s, containing [thumb], [medium], [title] and [description]
 * Optionally, [_onsearch] can also return an [id] for each image. If it does, then no image insertion will be performed for
 * image, and this [id] will be assumed to be the database ID of existing image. Otherwise, image will be downloaded to 
 * user's public document folder, and inserted into database
 *
 * In addition, this file expects [_on-image-selected], which is the lambda callback ivoked when an image is actually
 * selected for use
 */


/*
 * Passing in arguments to other parts of file, for those who needs them
 */
set:x:/../**/={_query}?value
  src:x:/../*/_query?value
set:x:/../**/={_widget}?value
  src:x:/../*/_widget?value
set:x:/../**/={_start}?value
  src:x:/../*/_start?value
set:x:/../**/={_end}?value
  src:x:/../*/_end?value
add:x:/../**/_onsearch
  src:x:/../*/_onsearch/*
add:x:/../**/_on-image-selected
  src:x:/../*/_on-image-selected/*


/*
 * Clearing widget, in case it has been previously shown, and has widgets
 */
clear-widget:{_widget}
set-widget-property:{_widget}
  visible:true


/*
 * Associates lambda event with search widget that actually does the heavy lifting in regards to search.
 * Expects [_start], [_end] and [_query]
 */
set-widget-lambda-event:{_widget}

  /*
   * Search for image lambda event, taking [_start], [_end] and [_query]. Forwards the actual search to
   * [_onsearch] lambda object, supplied when file was evaluated, passing in [_start], [_end] and [_query]
   * Builds a list of widgets, adding these to the output widget supplied when evaluating file [_widget]
   */
  sys42.icu.search-for-images

    /*
     * Search lambda object supplied when instantiating file
     */
    _onsearch
      _query
      _start
      _end

    /*
     * Parametrizing [_onsearch] with arguments
     */
    set:x:/../*/_onsearch/*/_start?value
      src:x:/../*/_start?value
    set:x:/../*/_onsearch/*/_end?value
      src:x:/../*/_end?value
    set:x:/../*/_onsearch/*/_query?value
      src:x:/../*/_query?value

    /*
     * Invoking parametrized [_onsearch] lambda object
     */
    eval:x:/../*/_onsearch

    /*
     * Builds widget creational statements, appending widgets as children widgets into [_widget],
     * supplied when evaluating file originally
     */
    databind:x:/../*/_create-widget
      src:x:/../*/eval/*
      template
        create-widget
          parent:{_widget}
          class:icu-flickr-result-item
          widgets
            a
              href:#
              onclick

                /*
                 * Shows preview of image, allowing user to preview it, before selecting it, or closing dialog to
                 * select another image
                 */
                sys42.icu.preview-image
                  {_thumb}:x:/*/thumb?value
                  {_medium}:x:/*/medium?value
                  {_title}:x:/*/title?value
                  {_description}:x:/*/description?value
                  {_id}:x:/*/id?value
              widgets
                img
                  {src}:x:/*/thumb?value
    _create-widget
    if:x:/../*/_create-widget/*?count
      =:int:0
      sys42.info-window:No more matched items
      return

    /*
     * Making sure we clear any existing widgets from parent container
     */
    clear-widget:{_widget}
    eval:x:/../*/_create-widget

    /*
     * Creating previous and next buttons, if we should.
     * First "previous" button
     * Calculating "next dataset" (start/end)
     */
    -:x:/../*/_end?value.int
      _:x:/../*/_start?value.int
    -:x:/../*/_start?value.int
      _:x:/./-?value
    -:x:/../*/_end?value.int
      _:x:/./-2?value
    set:x:/../*/_create-previous/**/_start?value
      src:x:/./-2?value
    set:x:/../*/_create-previous/**/_end?value
      src:x:/./-2?value
    _create-previous
      create-literal-widget
        parent:{_widget}
        element:a
        href:#
        class:icu-image-search-previous
        innerValue:@"<span class=""glyphicon glyphicon-arrow-left""></span>"
        onclick
          sys42.icu.search-for-images
            _query:{_query}
            _start
            _end
    if:x:/../*/_start?value.int
      !=:int:0
      eval:x:/./-

    /*
     * Then "next" button
     * Calculating "next dataset" (start/end)
     */
    -:x:/../*/_end?value.int
      _:x:/../*/_start?value.int
    +:x:/../*/_start?value.int
      _:x:/./-?value
    +:x:/../*/_end?value.int
      _:x:/./-2?value
    set:x:/../*/_create-next/**/_start?value
      src:x:/./-2?value
    set:x:/../*/_create-next/**/_end?value
      src:x:/./-2?value
    _create-next
      create-literal-widget
        parent:{_widget}
        element:a
        href:#
        class:icu-image-search-next
        innerValue:@"<span class=""glyphicon glyphicon-arrow-right""></span>"
        onclick
          sys42.icu.search-for-images
            _query:{_query}
            _start
            _end
    if:x:/../*/_create-widget/*?count
      =:int:10
      eval:x:/./-


  /*
   * Previews image, allowing user to select it for usage. Expects arguments; 
   * [_thumb], [_medium], [_title] and [_description]
   * Can also (optionally) take an [_id] being ID to existing image in database
   */
  sys42.icu.preview-image

    /*
     * Making sure we destroy any existing widgets, if there are any
     */
    if
      fetch:x:/0/0?value
        widget-exist:icu-lightbox-picture
      delete-widget:icu-lightbox-picture

    /*
     * HTML encoding description, in case it contains angle brackets, or something else "fishy"
     */
    html-encode:x:/../*/_description?value

    /*
     * Forward evaluating parameters such as image src, title, plus others
     */
    eval-x:x:/+/**(/img/*(/src|/title|/alt)|/h3/*/innerValue|/_medium|/_thumb|/_title|/_description|/_id)

    /*
     * Creating modal widget that previews image, allowing user to select image (or close preview dialog)
     */
    create-widget:icu-lightbox-picture
      class:icu-lightbox-picture
      onkeyup:"p5.lightboxKeyUp(event);"
      widgets
        div:icu-lightbox-picture-modal-window
          class:icu-lightbox-picture-modal-window
          widgets

            /*
             * Title of image, displayed using h3 HTML element, expression is forward evaluated above
             */
            h3
              innerValue:x:/../*/_title?value

            /*
             * Actual image, expressions are forward evaluated above
             */
            img
              src:x:/../*/_medium?value
              alt:x:/../*/html-encode?value
              title:x:/../*/html-encode?value

            /*
             * Button "row" at the bottom of modal window, allows user to select image, or close preview dialog
             */
            div
              style:"text-align:right;"
              class:prepend-top
              widgets

                /*
                 * Closes preview dialog, without selecting image
                 */
                button:icu-lightbox-picture-close
                  class:btn btn-default
                  style:"width:80px;"
                  innerValue:@"<span class=""glyphicon glyphicon-remove""></span>"
                  onclick
                    send-javascript:@"
$('#icu-lightbox-picture-modal-window').toggleClass('icu-lightbox-picture-modal-window').toggleClass('action-modal-window-fadeout').one('animationend',
  function(e) {
    $('#' + e.target.id).hide();
    $('#icu-lightbox-picture').fadeOut({duration:200});
  });"

                /*
                 * Selects image, and closes dialog, invoking callback for selected lambda object supplied when
                 * evaluating file
                 */
                button:icu-lightbox-picture-ok
                  class:btn btn-primary
                  style:"width:80px; margin-left:10px;"
                  innerValue:@"<span class=""glyphicon glyphicon-ok""></span>"
                  oninit
                    send-javascript:@"$('#{0}').focus();"
                      :x:/../*/_event?value
                  onclick
                    _thumb:x:/../*/_thumb?value
                    _medium:x:/../*/_medium?value
                    _title:x:/../*/_title?value
                    _description:x:/../*/_description?value
                    _id:x:/../*/_id?value
                    send-javascript:@"
$('#icu-lightbox-picture-modal-window').toggleClass('icu-lightbox-picture-modal-window').toggleClass('action-modal-window-fadeout').one('animationend',
  function(e) {
    $('#' + e.target.id).hide();
    $('#icu-lightbox-picture').fadeOut({duration:200});
  });"
                    add:x:/+
                      src:x:/../*(/_thumb|/_medium|/_title|/_description|/_id)
                    _on-image-selected
                    eval:x:/-

/*
 * Doing initial first search
 */
sys42.icu.search-for-images
  _start:{_start}
  _end:{_end}
  _query:{_query}
