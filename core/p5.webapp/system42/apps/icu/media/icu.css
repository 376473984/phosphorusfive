

/*
 * CSS file for the ICU app
 *
 * Contains the main default CSS classes for using the ICU keyboard
 */



/*
 * Main class for ICU wrapper element
 */
.icu {
    position:relative;
    margin-top:25px;
    width:calc(100% - 30px);
    margin-left:15px;
    margin-right:15px;
    margin-bottom:50px;
}



/*
 * Toggle keyboard helper class. To use, create a widget that toggles the keyboard with specified class.
 * To toggle keyboard, use; the [sys42.icu.toggle-keyboard] Active Event
 */
.icu .icu-toggle-keyboard {
    position:absolute;
    top:10px;
    left:10px;
    font-size:30px;
    color:rgba(0,100,0,.5);
    text-shadow:3px 3px 5px rgba(0,0,0,.3);
    transition:color, text-shadow, transform, opacity;
    transition-duration:.5s;
    transform:scale(1);
    opacity:.3;
}
.icu .icu-toggle-keyboard:hover {
    color:rgba(0,130,0,1);
    text-shadow:5px 5px 5px rgba(0,0,0,.5);
    transition:color, text-shadow, transform, opacity;
    transition-duration:.5s;
    transform:scale(1.5);
    opacity:1;
}



/*
 * Toggle settings helper class. To use, create a widget that toggles the settings with specified class.
 * To toggle keyboard, use; the [sys42.icu.toggle-settings-widget] Active Event
 */
.icu .icu-toggle-settings {
    position:absolute;
    top:10px;
    right:10px;
    font-size:30px;
    color:rgba(0,100,0,.5);
    text-shadow:3px 3px 5px rgba(0,0,0,.3);
    transition:color, text-shadow, transform, opacity;
    transition-duration:.5s;
    transform:scale(1);
    opacity:.3;
}
.icu .icu-toggle-settings:hover {
    color:rgba(0,130,0,1);
    text-shadow:5px 5px 5px rgba(0,0,0,.5);
    transition:color, text-shadow, transform;
    transition-duration:.5s;
    transform:scale(1.5);
    opacity:1;
}


/*
 * Common for both settings widget and toggle keyboard widget
 */
.icu .icu-toggle-keyboard:focus,
.icu .icu-toggle-settings:focus {
    outline:0;
}



/*
 * Settings widget default CSS classes. 
 * To show the settings widget, invoke the Active Event [sys42.icu.toggle-settings-widget]
 */
@keyframes icu-animate-settings {
    0% {
        transform:scale(0) rotate(360deg);
    }
    100% {
        transform:scale(1) rotate(0deg);
    }
}
.icu .icu-settings-widget {
    position:absolute;
    top:-5px;
    right:-5px;
    background-color:rgba(252,252,252,1);
    box-shadow:5px 5px 5px rgba(0,0,0,.2);
    border:solid 1px rgba(0,0,0,.2);
    z-index:25;
    border-radius:5px;
    padding:0px 25px 25px 25px;
    width:250px;
    animation-name:icu-animate-settings;
    animation-duration:.5s;
}
.icu .icu-settings-widget hr {
    margin-bottom:4px;
    margin-left:-25px;
    margin-right:-25px;
}



/*
 * Default CSS classes for [container] type of [_icu-output-widget].
 */
.icu .icu-output {
    background:Transparent url(images/paper-texture.jpg) no-repeat top left;
    background-size:cover;
    padding:35px 15px 10px 32px;
    overflow:auto;
    min-height:201px;
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}





/*
 * Default CSS classes for "words" in both output widget and keyboard widget, both with and without text shown.
 *
 * Basically, output widget always shows images with 125x125 pixels.
 * Keyboard widget however, will resize its images, according to a percentage, since it's an HTML "table" element.
 *
 * In addition, we can apply either "icu-show-text" or "icu-hide-text", to both keyboard widget, and output
 * widget, which will either show text, or hide the text, depending upon which class you choose.
 *
 * Images are always, regardless of whether or not you display text, shown in "square" proportions, height == width
 * This is true both for keyboard widget and output widget.
 */
.icu .icu-word {
    display:block;
    float:left;
    margin-right:15px;
    margin-bottom:15px;
    background-color:rgb(254,254,254);
    overflow:hidden;
    border:none 0;
    padding:0;
}

/*
 * Default image CSS class for words
 */
.icu .icu-word .icu-image {
    width:100%;
    height:100%;
}

/*
 * Default text CSS class for words (text displayed beneath image)
 * Notice, we use "text-overflow:ellipsis", to make sure we hide the text we cannot find room for within
 * the image. This is true both for keyboard widget and output widget
 */
.icu .icu-word .icu-text {
    float:left;
    clear:left;
    max-width:100%;
    width:100%;
    text-align:center;
    color:rgba(180,180,180,1);
    font-size:x-small;
    text-overflow: ellipsis;
    white-space:nowrap;
    overflow-x:hidden;
    padding:1px 3px 1px 3px;
}


/*
 * Special classes for output widget.
 * We default height to 141, such that we get 16 pixels extra for text
 * Overridden below, in case text is hidden for output
 */
.icu .icu-output .icu-word {
    width:125px;
    height:141px;
}

/*
 * In output widget, we never keep outline (blue border around current focus widget),
 * in keyboard widget however, we only remove the outline, if we have an animation class that explicitly
 * does so. Since otherwise, we have no visual clues as to which key is currently having focus.
 */
.icu .icu-output .icu-word:focus {
    outline:0;
}


/*
 * Special classes for keyboard widget.
 * We subtract 8 pixels for margin to the right of word
 */
.icu .icu-keyboard .icu-word {
    width:calc(100% - 8px);
    margin-bottom:8px;
    margin-right:8px;
}


/*
 * Special classes for "show" text.
 * Here we need to subtract 16 pixels, to allow for text to show
 */
.icu .icu-show-text .icu-word .icu-image {
    width:100%;
    height:calc(100% - 16px);
}


/*
 * Special classes for "hide text".
 * Only applies for output widget, since it's the only HTML div that have this class.
 * Keyboard widget is HTML table element
 */
.icu div.icu-hide-text .icu-word {
    width:125px;
    height:125px;
}

/*
 * Making sure we hide text, both for keyboard widget, and output widget, if class says so
 */
.icu .icu-hide-text .icu-word .icu-text {
    display:none;
}



/*
 * Default CSS classes for "keyboard widget".
 *
 * Notice that we add 8 pixels to the keyboard width, to accommodate for the 8 pixel margin for each key,
 * such that keyboard widget should align with other 100% width widgets on screen.
 */
.icu .icu-keyboard {
    width:calc(100% + 8px);
    border-spacing:0px;
    border-collapse:collapse;
    table-layout:fixed;
}








/*
 * Animation classes for ICU
 */



/*
 * Default "fade in word" animation
 */
.icu .icu-animation-fade-in-word .icu-word {
    animation:icu-animate-fade-in-word .5s;
}
@keyframes icu-animate-fade-in-word {
    0% {
        opacity:0;
        transform:scale(0);
    }
    80% {
        opacity:1;
        transform:scale(1.2);
    }
    100% {
        transform:scale(1);
    }
}


/*
 * Default animation that "grows" an image when hovered
 */
.icu .icu-animation-hover .icu-word {
    transition:background-color, transform, box-shadow;
    transition-duration:.3s;
    transform:scale(1);
}
.icu .icu-animation-fade-in-word .icu-word {
    animation:icu-animate-fade-in-word .4s;
}
.icu .icu-animation-hover .icu-word:focus {
    transition:box-shadow, transform;
    transition-duration:.3s;
    box-shadow:3px 3px 1px rgba(0,0,0,.3);
    transform:scale(1.1);
    z-index:5;
    position:relative;
    outline:0;
}
.icu .icu-animation-hover .icu-word:hover {
    transition:box-shadow, transform;
    transition-duration:.3s;
    box-shadow:3px 3px 1px rgba(0,0,0,.3);
    transform:scale(1.1);
    z-index:5;
    position:relative;
    outline:0;
}
.icu .icu-animation-hover .icu-word:active {
    transition:background-color, transform, box-shadow;
    transition-duration:.3s;
    transform:scale(.95);
    box-shadow:3px 3px 1px rgba(0,0,0,.3);
}



/*
 * CSS class for currently "active" keyboard key
 */
.icu .icu-active-key {
    background-color:rgba(0,255,0,.1);
}


/*
 * Default "drop down" animation
 */
@keyframes icu-animate-drop-from-sky {
    0% {
        margin-left:-1000px;
        margin-top:-500px;
        opacity:0;
    }
    100% {
        opacity:1;
    }
}
.icu .icu-animation-drop-from-sky .icu-word {
    animation-name:icu-animate-drop-from-sky;
    animation-duration:.5s;
    animation-fill-mode:forwards;
    animation-timing-function:ease-out;
    opacity:0;
}
.icu .icu-animation-drop-from-sky tr:nth-child(1) td:nth-child(1) button.icu-word {
    animation-delay:0s;
}
.icu .icu-animation-drop-from-sky tr:nth-child(1) td:nth-child(2) button.icu-word {
    animation-delay:0.05s;
}
.icu .icu-animation-drop-from-sky tr:nth-child(1) td:nth-child(3) button.icu-word {
    animation-delay:0.1s;
}
.icu .icu-animation-drop-from-sky tr:nth-child(1) td:nth-child(4) button.icu-word {
    animation-delay:0.15s;
}
.icu .icu-animation-drop-from-sky tr:nth-child(1) td:nth-child(5) button.icu-word {
    animation-delay:0.20s;
}
.icu .icu-animation-drop-from-sky tr:nth-child(1) td:nth-child(6) button.icu-word {
    animation-delay:0.25s;
}
.icu .icu-animation-drop-from-sky tr:nth-child(1) td:nth-child(7) button.icu-word {
    animation-delay:0.3s;
}
.icu .icu-animation-drop-from-sky tr:nth-child(1) td:nth-child(8) button.icu-word {
    animation-delay:0.35s;
}
.icu .icu-animation-drop-from-sky tr:nth-child(1) td:nth-child(9) button.icu-word {
    animation-delay:0.4s;
}
.icu .icu-animation-drop-from-sky tr:nth-child(1) td:nth-child(10) button.icu-word {
    animation-delay:0.45s;
}
.icu .icu-animation-drop-from-sky tr:nth-child(1) td:nth-child(11) button.icu-word {
    animation-delay:0.5s;
}
.icu .icu-animation-drop-from-sky tr:nth-child(1) td:nth-child(12) button.icu-word {
    animation-delay:0.55s;
}
.icu .icu-animation-drop-from-sky tr:nth-child(1) td:nth-child(13) button.icu-word {
    animation-delay:0.6s;
}
.icu .icu-animation-drop-from-sky tr:nth-child(1) td:nth-child(14) button.icu-word {
    animation-delay:0.7s;
}
.icu .icu-animation-drop-from-sky tr:nth-child(2) td:nth-child(1) button.icu-word {
    animation-delay:0.85s;
}
.icu .icu-animation-drop-from-sky tr:nth-child(2) td:nth-child(2) button.icu-word {
    animation-delay:0.8s;
}
.icu .icu-animation-drop-from-sky tr:nth-child(2) td:nth-child(3) button.icu-word {
    animation-delay:0.75s;
}
.icu .icu-animation-drop-from-sky tr:nth-child(2) td:nth-child(4) button.icu-word {
    animation-delay:0.7s;
}
.icu .icu-animation-drop-from-sky tr:nth-child(2) td:nth-child(5) button.icu-word {
    animation-delay:0.65s;
}
.icu .icu-animation-drop-from-sky tr:nth-child(2) td:nth-child(6) button.icu-word {
    animation-delay:0.6s;
}
.icu .icu-animation-drop-from-sky tr:nth-child(2) td:nth-child(7) button.icu-word {
    animation-delay:0.55s;
}
.icu .icu-animation-drop-from-sky tr:nth-child(2) td:nth-child(8) button.icu-word {
    animation-delay:0.5s;
}
.icu .icu-animation-drop-from-sky tr:nth-child(2) td:nth-child(9) button.icu-word {
    animation-delay:0.45s;
}
.icu .icu-animation-drop-from-sky tr:nth-child(2) td:nth-child(10) button.icu-word {
    animation-delay:0.4s;
}
.icu .icu-animation-drop-from-sky tr:nth-child(2) td:nth-child(11) button.icu-word {
    animation-delay:0.35s;
}
.icu .icu-animation-drop-from-sky tr:nth-child(2) td:nth-child(12) button.icu-word {
    animation-delay:0.3s;
}
.icu .icu-animation-drop-from-sky tr:nth-child(2) td:nth-child(13) button.icu-word {
    animation-delay:0.25s;
}
.icu .icu-animation-drop-from-sky tr:nth-child(2) td:nth-child(14) button.icu-word {
    animation-delay:0.2s;
}
.icu .icu-animation-drop-from-sky tr:nth-child(3) td:nth-child(1) button.icu-word {
    animation-delay:0.4s;
}
.icu .icu-animation-drop-from-sky tr:nth-child(3) td:nth-child(2) button.icu-word {
    animation-delay:0.45s;
}
.icu .icu-animation-drop-from-sky tr:nth-child(3) td:nth-child(3) button.icu-word {
    animation-delay:0.5s;
}
.icu .icu-animation-drop-from-sky tr:nth-child(3) td:nth-child(4) button.icu-word {
    animation-delay:0.55s;
}
.icu .icu-animation-drop-from-sky tr:nth-child(3) td:nth-child(5) button.icu-word {
    animation-delay:0.6s;
}
.icu .icu-animation-drop-from-sky tr:nth-child(3) td:nth-child(6) button.icu-word {
    animation-delay:0.65s;
}
.icu .icu-animation-drop-from-sky tr:nth-child(3) td:nth-child(7) button.icu-word {
    animation-delay:0.7s;
}
.icu .icu-animation-drop-from-sky tr:nth-child(3) td:nth-child(8) button.icu-word {
    animation-delay:0.75s;
}
.icu .icu-animation-drop-from-sky tr:nth-child(3) td:nth-child(9) button.icu-word {
    animation-delay:0.8s;
}
.icu .icu-animation-drop-from-sky tr:nth-child(3) td:nth-child(10) button.icu-word {
    animation-delay:0.85s;
}
.icu .icu-animation-drop-from-sky tr:nth-child(3) td:nth-child(11) button.icu-word {
    animation-delay:0.9s;
}
.icu .icu-animation-drop-from-sky tr:nth-child(3) td:nth-child(12) button.icu-word {
    animation-delay:0.95s;
}
.icu .icu-animation-drop-from-sky tr:nth-child(3) td:nth-child(13) button.icu-word {
    animation-delay:1s;
}
.icu .icu-animation-drop-from-sky tr:nth-child(3) td:nth-child(14) button.icu-word {
    animation-delay:1.05s;
}


/*
 * Default "fade in" animation
 */
@keyframes icu-animate-fade-in-keyboard {
    0% {
        opacity:0;
    }
}
.icu .icu-animation-fade-in-keyboard .icu-word {
    animation-name:icu-animate-fade-in-keyboard;
    animation-duration:.5s;
}


/*
 * Default shadow and rounded corners for words
 */
.icu .icu-box-shadow .icu-word {
    box-shadow:2px 2px 1px rgba(0,0,0,.2);
}
.icu .icu-rounded-corners .icu-word {
    border-radius:5px;
}





/*
 * Common helper CSS classes and animations
 */
@keyframes icu-animate-modal-bg {
    0% {
        background-color:rgba(0,0,0,0);
    }
    100% {
        background-color:rgba(0,0,0,.7);
    }
}
.icu .icu-search-modal-bg {
    position:fixed;
    top:0px;
    left:0px;
    width:100%;
    height:100%;
    background-color:rgba(0,0,0,0);
    z-index:100;
    animation-name:icu-animate-modal-bg;
    animation-duration:.5s;
    animation-fill-mode:forwards;
}
@keyframes icu-animate-search-modal-window {
    0% {
        opacity:0;
        margin-top:-200px;
    }
    100% {
        opacity:1;
        margin-top:45px;
    }
}
.icu .icu-search-modal-window {
    margin-left:auto;
    margin-right:auto;
    width:50%;
    background-color:rgb(254,254,254);
    animation-name:icu-animate-search-modal-window;
    animation-duration:.5s;
    animation-fill-mode:forwards;
    overflow:auto;
    position:relative;
}
.icu .icu-close-dialog {
    position:absolute;
    top:15px;
    right:15px;
    font-size:18px;
}
.icu .icu-search-modal-window hr {
    margin-left:-30px;
    margin-right:-30px;
}
.icu .icu-search-modal-window h3 {
    margin-top:0px;
}
.icu .icu-fullscreen-image {
    margin-left:auto;
    margin-right:auto;
    margin-top:25px;
    max-width:80%;
    max-height:calc(100% - 50px);
    display:block;
}
