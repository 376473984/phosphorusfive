/*
 * Creates the toolbar for the Page editor
 */


/*
 * Needed further down
 */
select-data:x:/*/*/p5.page/"={0}"
  :x:/../*/_id?value


/*
 * Setting templates, making sure we add the "empty" first.
 */
add:x:/../*/create-widget/**/container/=page-template/*/widgets
  src
    literal
      element:option
      value:_empty
      innerValue:No template
list-files:@CMS/page-templates/
  filter:.hl
for-each:x:/-/*?name
  _lit
    literal
      element:option
      value
      innerValue
  split:x:/./*/_dp?value
    =:/
  split:x:/-/0/-?name
    =:.
  set:x:/..for-each/*/_lit/*/*/value?value
    src:x:/..for-each/*/_dp?value
  set:x:/..for-each/*/_lit/*/*/innerValue?value
    src:x:/..for-each/*/split/[1,2]/0?name
  if:x:/../*/select-data/[0,1]/*/*/template?value
    =:x:/..for-each/*/_dp?value
    add:x:/..for-each/*/_lit/*
      src
        selected
  add:x:/../*/create-widget/**/container/=page-template/*/widgets
    src:x:/..for-each/*/_lit/*


/*
 * Setting roles
 */
list-roles
for-each:x:/-/*?name
  _lit
    literal
      parent:page-role
      element:option
      value
      innerValue
  set:x:/..for-each/*/_lit/*/*/value?value
    src:x:/..for-each/*/_dp?value
  set:x:/..for-each/*/_lit/*/*/innerValue?value
    src:x:/..for-each/*/_dp?value
  if:x:/../*/select-data/[0,1]/*/*/role?value
    =:x:/..for-each/*/_dp?value
    add:x:/..for-each/*/_lit/*
      src:selected
  add:x:/../*/create-widget/**/container/=page-role/*/widgets
    src:x:/..for-each/*/_lit/*


/*
 * Making sure [oninit] event handler knows ID of page edited
 */
set:x:/../*/create-widget/*/oninit/**/={_id}?value
  src:x:/../*/_id?value

/*
 * Creating actual toolbar
 */
create-widget
  parent:cms-page-editor-surface


  /*
   * Ajax events for widget
   */
  oninit


    /*
     * Loading page from database, and setting widget values accordingly
     */
    select-data:x:/*/*/p5.page/"={0}"
      :{_id}
    set-widget-property:page-name
      value:x:/../*/select-data/*/*/name?value
    set-widget-property:page-url
      value:x:/../*/select-data/*?value


  widgets


    /*
     * Page Name
     */
    container
      class:col-md-3 form-group
      widgets
        container:page-editor-name-textbox
          class:input-group
          widgets
            literal
              element:div
              innerValue:Name
              class:input-group-addon
            void:page-name
              element:input
              type:text
              class:form-control
              placeholder:Page name ...


    /*
     * Page URL
     */
    container
      class:col-md-3 form-group
      widgets
        container:page-editor-url-textbox
          class:input-group
          widgets
            literal
              element:div
              innerValue:URL
              class:input-group-addon
            void:page-url
              element:input
              type:text
              class:form-control
              placeholder:URL ...


    /*
     * Page Template
     */
    container
      class:col-md-3 form-group
      widgets
        container:page-editor-template-dropdown
          class:input-group
          widgets
            literal
              element:div
              class:input-group-addon
              innerValue:Template
            container:page-template
              element:select
              class:form-control
              widgets


    /*
     * Page Access Role
     */
    container
      class:col-md-3 form-group
      widgets
        container:page-editor-access-role-dropdown
          class:input-group
          widgets
            literal
              element:div
              class:input-group-addon
              innerValue:Access Role
            container:page-role
              element:select
              class:form-control
              widgets
                literal
                  element:option
                  value:_default
                  innerValue:No restrictions ...


    /*
     * Custom editor surface
     */
    container:cms-specialized-editor-surface

      /*
       * Custom events for specialized editor surface widget.
       */
      events

        /*
         * Returns ID of specialized edditor surface widget.
         */
        sys42.cms.get-specialized-editor-surface
          return:x:/../*/_event?value


    /*
     * Save, Preview and Delete button wrapper
     */
    container
      class:col-md-12 text-right prepend-top

      /*
       * Since we don't want page to "jump" up and down, as user is enabling feature
       * in specialized editor, we provide an additional margin at the bottom of roughly "page height"
       */
      style:"margin-bottom:600px;"
      widgets
        container
          class:btn-group
          widgets


            /*
             * Save button
             */
            literal:save-button
              element:button
              type:button
              innerValue:Save
              class:btn btn-default
              title:Alt + S
              onclick
                sys42.save-edited-page


              /*
               * Lambda events for "Save" button
               */
              events


                /*
                 * Saves currently edited page
                 */
                sys42.save-edited-page
                  sys42.cms.get-currently-edited-page
                  _widgets
                    page-url
                    page-name
                    page-role
                    page-template
                  get-widget-property:x:/-/*?name
                    value
                  set:x:/../*/update-data/*/*?value
                    src:x:/../*/get-widget-property/*/page-url/*?value
                  set:x:/../*/update-data/*/*/*/name?value
                    src:x:/../*/get-widget-property/*/page-name/*?value
                  set:x:/../*/update-data/*/*/*/template?value
                    src:x:/../*/get-widget-property/*/page-template/*?value
                  if:x:/../*/get-widget-property/*/page-role/*?value
                    !=:"_default"
                    add:x:/../*/update-data/*/*
                      src:"role:{0}"
                        :x:/../*/get-widget-property/*/page-role/*?value
                  sys42.get-page-editor-data
                  add:x:/../*/update-data/*/*
                    src:x:/../*/sys42.get-page-editor-data/*
                  update-data:x:/*/*/p5.page/"={0}"
                    :x:/../*/sys42.cms.get-currently-edited-page?value
                    src
                      p5.page
                        name
                        template
                  sys42.cms.create-navbar-menu

                  // Since URL of page (and hence ID) might have changed, we'll need to go through this again
                  sys42.cms.set-currently-edited-page:x:/../*/get-widget-property/*/page-url/*?value
                  sys42.cms.populate-select-page

                  // Checking how many levels of nesting we have in page, to warn user of that more than two levels are BAD
                  split:x:/../*/get-widget-property/*/page-url/*/value?value
                    =:/
                  if:x:/-/*?count
                    >:int:2
                    sys42.windows.info-tip:@"In general, it is considered bad practice to have more than two levels of nested menus! 
Your page currently has {0} levels!"
                      :x:/././-/*?count
                      _class:info-window-warning info-window-longer
                    set-widget-property:page-url
                      style:"background-color:rgba(255,0,0,.2);"
                      title:@"This is a bad idea!
Try to avoid using more than two levels (/) in your URLs.
Among other things, your page becomes inacessible on tablets and phones!"
                    send-javascript:"$('#page-url').focus().select();"
                  else
                    sys42.windows.info-tip:Page '{0}' was successfully saved
                      :x:/../*/get-widget-property/*/page-name/*?value
                    set-widget-property:page-url
                      style
                      title


            /*
             * "Save as" button
             */
            literal:save-as-button
              element:button
              type:button
              innerValue:Save as ...
              class:btn btn-default
              onclick

                /*
                 * Getting name and URL of page, 
                 * such that we can use it as basis for new name and URL
                 */
                get-widget-property:page-name
                  value
                get-widget-property:page-url
                  value

                /*
                 * Forward evaluating expressions inside of [_widgets] below
                 */
                eval-x:x:/+/*/*/*/*/*/value|/+/*/_onok/*/_old-page
                sys42.windows.modal
                  _header:Supply name and URL of new page
                  _widgets
                    div:new-page-name-wrp
                      class:form-group
                      widgets
                        label
                          for:new-page-name
                          class:control-label
                          innerValue:Page name
                        input:new-page-name
                          type:text
                          class:form-control
                          placeholder:Name of page ...
                          value:{0} - copy
                            :x:/../*/get-widget-property/[0,1]/*/*?value
                    div:new-page-url-wrp
                      class:form-group
                      widgets
                        label
                          for:new-page-url
                          class:control-label
                          innerValue:Page URL
                        input:new-page-url
                          type:url
                          class:form-control
                          placeholder:URL of page ...
                          value:{0}-copy
                            :x:/../*/get-widget-property/[1,2]/*/*?value
                  _onok

                    /*
                     * Will contain the database id of old page
                     */
                    _old-page:x:/../*/get-widget-property/[1,2]/*/*?value

                    /*
                     * Getting the new page's name and URL
                     */
                    get-widget-property:new-page-name
                      value
                    get-widget-property:new-page-url
                      value

                    /*
                     * Making sure supplied name does not exist from before
                     */
                    select-data:x:@"/*/*/p5.page/""={0}"""
                      :x:/../*/get-widget-property/[1,2]/*/*?value
                    if:x:/../*/select-data/[0,1]/*?count
                      >:int:0

                      /*
                       * Page exists from before, alerting user, and returning 
                       * without setting the "close modal window flag"
                       */
                      sys42.add-css-classes:new-page-url-wrp
                        _class:has-error
                      send-javascript:@"$('#new-page-url').focus().select();"

                      /*
                       * Returning early
                       */
                      return:bool:false

                    /*
                     * Getting page data, and saving as a new object in database
                     */
                    sys42.get-page-editor-data

                    /*
                     * Then making sure we select old page, and replace [name] and 
                     * [url] (which is ID of database object), in addition to new data,
                     * before saving as new object in database
                     */
                    select-data:x:@"/*/*/p5.page/""={0}"""
                      :x:/../*/_old-page?value

                    /*
                     * Changing id (URL of page) to new URL, in addition to changing name of page
                     */
                    set:x:/../*/select-data/[1,2]/*?value
                      src:x:/../*/get-widget-property/[1,2]/*/*?value
                    set:x:/../*/select-data/[1,2]/*/*/name?value
                      src:x:/../*/get-widget-property/[0,1]/*/*?value

                    /*
                     * Then removing all items from [select-data] that also exists in [sys42.get-page-editor-data]
                     */
                    for-each:x:/../*/select-data/[1,2]/*/*
                      if:x:@"/../*/sys42.get-page-editor-data/*/""{0}"""
                        :x:/..for-each/*/_dp/#?name
                        set:x:/..for-each/*/_dp/#
                    add:x:/../*/select-data/[1,2]/*
                      src:x:/../*/sys42.get-page-editor-data/*

                    /*
                     * Now we can save new page to database
                     */
                    add:x:/../*/insert-data
                      src:x:/../*/select-data/[1,2]/*
                    insert-data

                    /*
                     * Then we need to "refresh editor", but first, setting "edited page" to
                     * the page we just saved
                     */
                    sys42.cms.set-currently-edited-page:x:/../*/get-widget-property/[1,2]/*/*?value

                    /*
                     * Simple version, refreshing page location.
                     * No need to close dialogues or anything, simply reloading page, should do the trick
                     */
                    reload-location


            /*
             * Preview button
             */
            literal:preview-button
              element:button
              innerValue:View page
              class:btn btn-default
              onclick
                sys42.cms.get-currently-edited-page
                send-javascript:@"window.open('{0}', '_blank');"
                  :x:/./-?value


            /*
             * Delete button
             */
            literal:delete-button
              element:button
              innerValue:Delete
              class:btn btn-default
              onclick
                sys42.windows.confirm
                  _header:Please confirm deletion
                  _body:Are you sure you want to delete this page? This action cannot be undone!
                  _onok
                    sys42.delete-currently-edited-page
                    sys42.windows.info-tip:Page was successfully deleted


              /*
               * Lambda events for delete button
               */
              events


                /*
                 * Deletes the currently edited page
                 */
                sys42.delete-currently-edited-page
                  sys42.cms.get-currently-edited-page
                  delete-data:x:/*/*/p5.page/"={0}"
                    :x:/./-?value
                  sys42.cms.set-currently-edited-page
                  reload-location


/*
 * Loading "specialized editor", depending upon which page type we're editing.
 */
sys42.cms.get-currently-edited-page
add:x:/../*/sys42.execute-lambda-file
  src:"_id:{0}"
    :x:/../*/sys42.cms.get-currently-edited-page?value
sys42.execute-lambda-file:@CMS/page-editor/specialized-editors/{0}.hl
  :x:/../*/_editor?value
