
/*
 * Responsible for loading up the user interface. 
 * Invoked by the core P5 framework when the UI is needed.
 *
 * Argument expected to by supplied is [_url], being the URL of the page requested.
 */
create-event:p5.web.load-ui

  /* 
   * Checking if there are no users in system, at which case, user must go through installation process.
   */
  list-users
  if:x:/-/*?count
    =:int:0

    /*
     * There are no users in system, making sure we run through the installation process.
     */
    sys42.utilities.execute-lambda-file:@CMS/installation/install-server.hl
  else

    /*
     * Checking if we're currently downloading a file.
     */
    get-session-value:sys42.cms.download-filename
    if:x:/-/*?value

      /*
       * We are currently downloading a file, passing it back to client, with given type (if any), and removing the session value,
       * before returning early.
       */
      get-session-value:sys42.cms.download-filetype
      if:x:/-/*?value
        set-http-header:Content-Type
          src:x:/@get-session-value/*?value
      split:x:/./@get-session-value/*?value
        =:/
      set-http-header:Content-Disposition
        src:@"attachment; filename={0}"
          :x:/@split/0/-?name
      set-session-value:sys42.cms.download-filename
      set-session-value:sys42.cms.download-filetype
      echo-file:x:/./@get-session-value/*?value
      return

    /*
     * Figuring out which page to load according to argument supplied in [_url].
     */
    select-data:x:@"/*/*/p5.page/""={0}"""
      :x:/../*/_url?value

    /*
     * Checking if page exists, and if not, loading our "page not found" special page.
     */
    if:x:/-/*?count
      =:int:0

      sys42.utilities.execute-lambda-file:@CMS/page-loader/special-page/not-found.hl
        _template:@CMS/page-templates/default.hl
    else

      /*
       * Adding up all nodes from results of select-data into [execute-lisp-file], which is our [p5.page] object.
       */
      add:x:/+3/*/_args
        src:x:/..else/..else/*/select-data/*/*

      /*
       * Setting value of [execute-lisp-file] to type of page we're loading.
       * If you look in "system42/apps/CMS/page-loader/" folder, you will see all the different types of pages that exist 
       * in the system. These types of pages are extendible, and can be added to to create custom types of pages. 
       * If you extend them, you should probably also create an editor for your page type.
       */
      set:x:/+2?value
        src:@CMS/page-loader/{0}.hl
          :x:/..else/..else/*/select-data/*/*/type?value
      eval-x:x:/+/*/_url
      sys42.utilities.execute-lambda-file
        _args
        _url:x:/../*/_url?value
