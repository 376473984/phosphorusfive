/*
 * Allows the user to evaluate unit tests in system
 */

/*
 * Verifies user is root first, since only root
 * can run unit tests
 */
whoami
if:x:/-/*/role?value
  !=:root
  throw:Only root user can run Unit Tests

/*
 * List all files in directory, but removing "index.hl",
 * assuming all other files are unit test files
 */
list-files:/system42/apps/tests/
  filter:hl
set:x:@"/-/*/""/system42/apps/tests/launch.hl"""

/*
 * Callback invoked while databinding innerValue of unit test name
 */
_eval-name
  split:x:/../*/_dn/#?name
    =:/
    =:.
  eval-x:x:/+/*/*
  insert-before:x:/../0
    src
      innerValue:x:/../*/split/0/-2?name

/*
 * Databinding unit tests files to table widget
 */
apply:x:/../*/create-widget/=unit-test-files/*/widgets/*/tbody/*/widgets
  src:x:/../*/list-files/*
  template
    tr

      /*
       * Used for retrieving unit test file row, to signal success or failure,
       * through red or green color on row as a whole
       */
      {_file-row}:x:?name
      widgets

        /*
         * Unit test filename
         */
        td
          widgets
            a
              {@eval}:x:/../*/_eval-name
              href:#
              title:Click to edit or view unit test file
              {_file-button}:x:?name
              onclick

                /*
                 * Checking  if editor is already loaded, and if so, deleting widget for it (entire "tr" element)
                 * Returns early if editor exists
                 */
                if
                  fetch:x:/0/0?value
                    widget-exist:{0}_editor
                      :x:/../*/_event?value
                  delete-widget:{0}_editor
                    :x:/../*/_event?value
                  return

                /*
                 * Invoking the Active Event responsible for creating our CodeMirror editor (in a "tr" row beneath test row)
                 */
                add:x:/+
                  src:"_widget:{0}"
                    :x:/../*/_event?value
                sys42.launch-unit-test-editor
                  {_file}:x:?name

        /*
         * Result text from evaluation of file, contains
         * either one or more bugs, or the names of all
         * unit tests that ran. Value depends upon whether
         * or not evaluation of unit tests was a success
         * or not. Before test is ran, "Undetermined" is
         * its value
         */
        td
          style:"width:60%;"
          innerValue:Undetermined
          {_file-result}:x:?name

        /*
         * Button that allows evaluation of a single unit test file.
         * Notice that you cannot run a single unit test, you can however
         * run a single unit test file
         */
        td
          widgets
            button
              class:btn btn-default form-control
              innerValue:Evaluate
              onclick

                /*
                 * Evaluates the databound unit test file, which may contain
                 * multiple unit tests. [_file] is filename of unit test file
                 */
                {_file}:x:?name
                _html
                sys42.evaluate-unit-test-file:x:/../*/_file?value
                if:x:/-/*/_error

                  /*
                   * Error while evaluating unit test file, setting result
                   * to ell error "messages" + "stack-trace" of exception,
                   * and making sure we signal in context value that error 
                   * occurred
                   */
                  for-each:x:/../*/sys42.evaluate-unit-test-file/*/_error?value
                    html-encode:x:/./*/_dp?value
                    set:x:/../*/_html?value
                      src:@"{0}<pre class=""error"">{1}</pre>"
                        :x:/../*/_html?value
                        :x:/..for-each/*/html-encode?value
                  set-context-value:sys42.unit-test-errors
                    src:bool:true

                  /*
                   * Setting unit tests table row to class "error", and button
                   * CSS class to warning
                   */
                  find-widget
                    _file-row:x:/../*/_file?value
                  set-widget-property:x:/-/*?value
                    class:error
                  set-widget-property:x:/../*/_event?value
                    class:btn btn-warning form-control
                    disabled
                else

                  /*
                   * Success while evaluating unit test file, no errors.
                   * Setting unit tests table row to class "success" and
                   * button CSS class to success
                   */
                  find-widget
                    _file-row:x:/../*/_file?value
                  set-widget-property:x:/-/*?value
                    class:success
                  set-widget-property:x:/../*/_event?value
                    class:btn btn-success form-control
                    disabled

                /*
                 * Updating unit test count
                 */
                get-session-value:sys42.unit-test-count
                if:x:/-/*?value
                  +:x:/./-/*?value
                    _:x:/../*/sys42.evaluate-unit-test-file/*(/_success|/_error)?count
                  set-session-value:sys42.unit-test-count
                    src:x:/./-?value

                /*
                 * Providing textual feedback to user about state of unit tests
                 */
                find-widget
                  _file-result:x:/../*/_file?value
                join:x:/../*/sys42.evaluate-unit-test-file/*/_success?value
                  sep:"]\r\n</li><li>["
                set-widget-property:x:/-2/*?value
                  innerValue:@"{0}<pre><ol><li>[{1}]</li></ol></pre>"
                    :x:/../*/_html?value
                    :x:/././-?value

/*
 * Creating widget showing all unit test files in a table
 */
create-widget:unit-test-files
  parent:content
  element:table
  class:table
  events

    /*
     * Invoked when a unit test file is being edited
     */
    sys42.launch-unit-test-editor

      /*
       * Retrieving parent's parent widget (which should be the "tr" HTML row)
       */
      get-parent-widget:x:/../*/_widget?value
      get-parent-widget:x:/-/*/*?value

      /*
       * Loading unit test file
       */
      load-file:x:/../*/_file?value
        convert:false

      /*
       * Then creating a new "tr" row, after that one, which contains only one column, containing the content
       * of our currently edited test file
       */
      eval-x:x:/+/*|/+|/+/**(/~codemirror|/_file)|/+/*/*/*/*/*/innerValue
      create-widget:{0}_editor
        :x:/../*/_widget?value
        after:x:/../*/get-parent-widget/[1,2]/*/*?value
        element:tr
        widgets
          td
            colspan:3
            style:"border-top:none;"
            widgets

              /*
               * Our CodeMirror custom editor widget
               */
              sys42.widgets.codemirror:{0}_codemirror
                :x:/../*/_widget?value
                _auto-focus:true
                _height:700px
                innerValue:x:/../*/load-file/*?value
              container
                class:btn-group col-xs-2 col-xs-push-10
                widgets
                  literal
                    element:button
                    style:"width:50%;"
                    class:btn btn-default btn-attach-top
                    innerValue:Save
                    onclick

                      /*
                       * Retrieving value from CodeMirror "textarea", and saving to specified test file.
                       * [_file] and [_codemirror] is forward evaluated before creation of widget
                       */
                      _file:x:/../*/_file?value
                      _codemirror:{0}_codemirror
                        :x:/../*/_widget?value
                      get-widget-property:x:/-?value
                        value
                      save-file:x:/../*/_file?value
                        src:x:/../*/get-widget-property/*/*?value

                      /*
                       * Deleting entire "editor HTML row" ("tr" element wrapping CodeMirror)
                       */
                      find-first-ancestor-widget:x:/../*/_event?value
                        element:tr
                      delete-widget:x:/-/*?value

                      /*
                       * Feedback to user
                       */
                      sys42.info-window:File was saved
                  literal
                    element:button
                    style:"width:50%;"
                    class:btn btn-default btn-attach-top
                    innerValue:Close
                    onclick

                      /*
                       * Deleting entire "editor HTML row" ("tr" element wrapping CodeMirror)
                       */
                      find-first-ancestor-widget:x:/../*/_event?value
                        element:tr
                      delete-widget:x:/-/*?value

    /*
     * Evaluates one Unit Test file
     */
    sys42.evaluate-unit-test-file
      load-file:x:/../*/_arg?value
      for-each:x:/-/*/*
        _test
        set:x:/-?value
          src:x:/..for-each/*/_dp/#
        try
          eval:x:/..for-each/*/_test?value
          add:x:/..
            src:"_success:{0}"
              :x:/..for-each/*/_dp/#?name
        catch
          eval-x:x:/+/*/*
          add:x:/..
            src
              _error:@"{0}; ""{1}""

{2}"
                :x:/..for-each/*/_dp/#?name
                :x:/..catch/*/message?value
                :x:/..catch/*/stack-trace?value


  /*
   * Widgets that are being databound above to show table containing all unit test
   * files in system
   */
  widgets
    thead
      widgets
        tr
          widgets
            th
              innerValue:Unit test file
            th
              innerValue:Result
            th
              class:text-right
              widgets
                button
                  class:btn btn-primary form-control
                  innerValue:Evaluate all
                  onclick
                    set-context-value:sys42.unit-test-errors
                      src:bool:false
                    date-now
                    set-session-value:sys42.unit-test-count
                      src:int:0
                    find-widget
                      innerValue:Evaluate
                    raise-widget-ajax-event:x:/../*/find-widget/*?value
                      onclick
                    get-session-value:sys42.unit-test-count
                    date-now
                    -:x:/-?value
                      _:x:/../*/date-now/[0,1]?value
                    eval-x:x:/+
                    sys42.info-window:@"{0} unit tests evaluated in {1:s\.fff} seconds"
                      :x:/./-4/*?value
                      :x:/./-2?value
                      _class:info-window-longer
                    get-context-value:sys42.unit-test-errors
                    if:x:/-/*?value
                      set-widget-property:x:/../*/_event?value
                        class:btn btn-warning form-control
                        disabled
                    else
                      set-widget-property:x:/../*/_event?value
                        class:btn btn-success form-control
                        disabled
    tbody
      widgets


create-widget:add-unit-test
  parent:content
  class:col-xs-6 col-xs-push-6 col-md-4 col-md-push-8 col-lg-3 col-lg-push-9 text-right prepend-top
  widgets

    /*
     * Creates new unit test file
     */
    button
      class:btn btn-default col-xs-4
      innerValue:+
      title:Create new unit test file
      onclick
        sys42.modal-window
          _header:Name of unit test file
          _body:Please provide a filename for your new test file
          _widgets
            container:test-filename-wrp
              class:form-group
              widgets
                input:test-filename
                  type:text
                  class:form-control
                  placeholder:Name of file ...
                  onkeypress:"return p5.testEnterClicked(event);"
                  oninit
                    /*
                      * Including JavaScript to help handle carriage return key in fields of dialogue
                      */
                    include-javascript:@"
p5.testEnterClicked = function(e) {
  if(e.keyCode == 13) {
    p5.$('test-create-btn').raise('onclick');
    return false;
  }
}"
          _buttons
            button:test-create-btn
              class:btn btn-default
              innerValue:Create
              onclick
                get-widget-property:test-filename
                  value
                if:x:/../*/get-widget-property/*/*?value
                  =:
                  set-widget-property:test-filename-wrp
                    class:form-group has-error
                  send-javascript:@"$('#test-filename').focus().select();"
                  return
                split:x:/../*/get-widget-property/*/*?value
                  =:.
                if:x:/-/*?count
                  =:int:1
                  set:x:/../*/get-widget-property/*/*?value
                    src:{0}.hl
                      :x:/../*/get-widget-property/*/*?value
                split:x:/../*/get-widget-property/*/*?value
                  =:/
                if:x:/-/*?count
                  >:int:1
                  set-widget-property:test-filename-wrp
                    class:form-group has-error
                  send-javascript:@"$('#test-filename').focus().select();"
                else
                  save-file:{0}{1}
                    :/system42/apps/tests/
                    :x:/../*/get-widget-property/*/*?value
                    src:@"/*
 * Contains unit tests for testing [whatever] in system
 */

/*
 * Tests that checks that ""foo1"" behaves correctly
 */
foo1
  _some-test-code-goes-here
  if:bool:false
    throw:@""Assert error, expected [something], got [something-else]!""

/*
 * Tests that checks that ""foo2"" behaves correctly
 */
foo2
  _some-other-piece-of-test-code-goes-here
  if:bool:false
    throw:@""Assert error, expected [something], got [something-else]!""
"
                  delete-widget:add-unit-test
                  delete-widget:unit-test-files
                  sys42.execute-lisp-file:/system42/apps/tests/launch.hl
                  sys42.modal-window.close
                  find-widget-like
                    _file-button:x:/../*/get-widget-property/*/*?value
                  raise-widget-ajax-event:x:/-/*?value
                    onclick

    /*
     * Clear unit tests
     */
    button
      class:btn btn-default col-xs-4
      innerValue:Clear
      title:Clear unit tests
      onclick
        delete-widget:add-unit-test
        delete-widget:unit-test-files
        sys42.execute-lisp-file:/system42/apps/tests/launch.hl

    /*
     * Shows the coverage of the test suite
     */
    button
      class:btn btn-default col-xs-4
      innerValue:Coverage
      title:Shows the coverage of your unit tests
      onclick

        /*
         * Lists all static Active Events in system that doesn't contain a "." in their names
         */
        vocabulary
        set:x:/-/*/dynamic|/-/*/=|/-/*/=~.

        /*
         * Then loading up all unit test files, making sure we remove the "launch.hl" file
         */
        list-files:/system42/apps/tests/
          filter:hl
        set:x:/-/*/~launch.hl
        load-file:x:/-2/*?name

        /*
         * Then looping through our vocabulary, and figuring out how many times each Active Event can be found 
         * in the combined results for ALL of our unit test files.
         */
        for-each:x:/../*/vocabulary/*
          add:x:/./*/_dp/#
            src:"{0}:int:{1}"
              :x:/..for-each/*/_dp/#?value
              :x:/../*/load-file/*/*/**/\{0}?count
                :x:/..for-each/*/_dp/#?value

        /*
         * Then we sort descending our vocabulary/hit-count list
         */
        sort-desc:x:/../*/vocabulary/*/*

        /*
         * To lambda objects used when [apply]'ing to HTML table below.
         * The first lambda is used to figure out which CSS class to use for row.
         */
        _get-css-for-row
          if:x:/../*/_dn/#?value.int
            =:int:0
            return
              class:danger
          else-if:x:/../*/_dn/#?value.int
            <=:int:4
            return
              class:warning
          else
            return
              class:success

        /*
         * This lambda object is used to figure out which "info" to show for row
         */
        _get-info-for-row
          if:x:/../*/_dn/#?value.int
            =:int:0
            return
              td
                innerValue:No tests!
          else-if:x:/../*/_dn/#?value.int
            <=:int:4
            return
              td
                innerValue:Not enought!
          else
            return
              td
                innerValue:OK

        /*
         * Then [apply]'ing to our [widgets] node in our [create-widget] invocation below,
         * to create one row for each keyword.
         */
        apply:x:/../*/create-widget/*/widgets/**/table/*/widgets
          src:x:/../*/sort-desc/*
          template
            tr
              {@eval}:x:/../*/_get-css-for-row
              widgets
                td
                  {innerValue}:x:?name
                td
                  {innerValue}:x:?value
                {@eval}:x:/../*/_get-info-for-row

        /*
         * Now we can create our "coverage" report for uni tests.
         * Notice, we create a modal window, with an HTML table inside of it,
         * with one row for each "keyword".
         */
        create-widget
          class:modal fade
          oninit
            send-javascript:@"$('#{0}').modal('toggle');"
              :x:/../*/_event?value
          widgets
            container
              class:modal-dialog
              role:document
              widgets
                container
                  class:modal-content
                  widgets
                    container
                      class:modal-header
                      widgets
                        literal
                          element:button
                          class:close
                          data-dismiss:modal
                          aria-label:Close
                          innerValue:&times;
                        literal
                          element:h4
                          innerValue:Coverage of Active Events in test suite
                    container
                      class:modal-body
                      widgets
                        table
                          class:table table-hover table-condensed
                          style:"font-size:small;"
                          widgets
                            tr
                              widgets
                                th
                                  style:"border-top:none;"
                                  innerValue:Active Event
                                th
                                  style:"border-top:none;"
                                  innerValue:Hit count
                                th
                                  style:"border-top:none;"
                                  innerValue:Assessment

