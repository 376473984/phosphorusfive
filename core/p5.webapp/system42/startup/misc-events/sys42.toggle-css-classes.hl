
/*
 * Responsible for creating the Active Event that toggles a CSS class(es) on widget. This Active Event
 * takes a CSS class(es) as [_class], and will append that CSS class to the widget defined as [_arg] if
 * the class does not already exist on widget, or remove the class from widget if it already exist 
 * from before.
 *
 * Pass in the ID of the widget to toggle class on as [_arg], and the class to toggle as [_class]
 */

create-protected-event:sys42.toggle-css-classes

  /*
   * Splitting upon every given CSS class caller wants to toggle
   */
  split:x:/../*/_class?value
    =:,
    =:" "
    trim:true

  /*
   * Retrieving CSS class of specified widget
   */
  get-widget-property:x:/../*/_arg?value
    class

  /*
   * Splitting each CSS class already in widget, such that we can figure out if class(es)
   * caller wants to toggle already exists or not
   */
  split:x:/../*/get-widget-property/*/*?value
    =:" "

  /*
   * Looping through each class supplied
   */
  for-each:x:/../*/split/[0,1]/*/$

    /*
     * Checking if currently iterated CSS class is in [split] result
     */
    if:x:/../*/split/[1,2]/*/{0}
      :x:/..for-each/*/_dp/#?name

      /*
       * Class exists, removing it
       */
      set:x:/../*/split/[1,2]/*/{0}
        :x:/..for-each/*/_dp/#?name
    else

      /*
       * Class does NOT exist, adding it
       */
      add:x:/../*/split/[1,2]
        src:x:/..for-each/*/_dp/#?name

  /*
   * Invoking [join] on split results, before settings new class value
   */
  join:x:/../*/split/[1,2]/*?name
    sep:" "
  set-widget-property:x:/../*/_arg?value
    class:x:/./-?value
