/*
 * Contains iterator unit tests for system
 */

/*
 * Test the reference iterator
 */
iterator-reference
  _data:node:
  set:x:/-/#?name
    src:foo
  set:x:/-2/#?value
    src:bar
  if:x:/../0/#?name
    !=:foo
    or:x:/../0/#?value
      !=:bar
    throw:@"Assert error, expected [foo:bar], got [{0}]!"
      :x:/../0/#

/*
 * Test the range iterator
 */
iterator-range
  _data
    foo1
    foo2
    foo3
    foo4
  set:x:/-?value
    src:x:/./-/*/[1,3]?name
  if:x:/-2?value
    !=:foo2foo3
    throw:@"Assert error, expected [foo2foo3], got [{0}]!"
      :x:/././-2?value

/*
 * Test the descendant iterator
 */
iterator-descendant
  _data
    foo1
      foo2
        foo3
      foo4
        foo5
    foo6
      foo7
  set:x:/-?value
    src:x:/./-/**?name
  if:x:/-2?value
    !=:foo1foo2foo3foo4foo5foo6foo7
    throw:@"Assert error, expected [foo1foo2foo3foo4foo5foo6foo7], got [{0}]!"
      :x:/././-2?value

/*
 * Test the children iterator
 */
iterator-children
  _data
    foo1
      foo2
        foo3
    foo6
  set:x:/-?value
    src:x:/./-/*?name
  if:x:/-2?value
    !=:foo1foo6
    throw:@"Assert error, expected [foo1foo6], got [{0}]!"
      :x:/././-2?value
