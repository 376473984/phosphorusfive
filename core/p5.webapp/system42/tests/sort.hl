/*
 * Contains unit tests for testing [sort] in system
 */

/*
 * Tests that checks that [sort] behaves correctly when sorting strings
 */
string-sort
  _data
    foo1
      name:brynjar
    foo2
      name:kalvik
    foo3
      name:abba
  sort:x:/../*/_data/*
    if:x:/./*/_lhs/#/*?value
      <:x:/././*/_rhs/#/*?value
      set:x:/./.?value
        src:int:-1
    else-if:x:/./*/_lhs/#/*?value
      >:x:/././*/_rhs/#/*?value
      set:x:/./.?value
        src:int:1
  if:x:/../*/sort
    !=:node:@"sort
  foo3
    name:abba
  foo1
    name:brynjar
  foo2
    name:kalvik"
    throw:@"Assert error, expected sorted list!"

/*
 * Tests that checks that [sort] behaves correctly when sorting integers
 */
int-sort
  _data
    foo1:int:60
    foo2:int:57
    foo3:int:88
  sort:x:/../*/_data/*
    if:x:/./*/_lhs/#?value
      <:x:/././*/_rhs/#?value
      set:x:/./.?value
        src:int:-1
    else-if:x:/./*/_lhs/#?value
      >:x:/././*/_rhs/#?value
      set:x:/./.?value
        src:int:1
  if:x:/../*/sort
    !=:node:@"sort
  foo2:int:57
  foo1:int:60
  foo3:int:88"
    throw:@"Assert error, expected sorted list!"
