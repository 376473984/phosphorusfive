
/*
 * Responsible for creating the Active Event that shows the user a modal dialog,
 * to make user confirm some action, before action is evaluated.
 *
 * Arguments;
 * 
 * [_header]         - Header of modal dialogue
 * [_body]           - Explanatory text of dialogue
 * [_class]          - Override the default CSS class
 * [_parent]         - Override the default parent widget
 * [_onok]           - Code to be evaluated if user clicks OK button
 * [_onclose]        - Lambda callback to be evaluated if user closes dialogue without pressing "OK".
 * [_buttons]        - Makes it possible to exchange the default "OK" button with your own buttons
 *                     If you supply a [_buttons] parameter, then [_ok] has no effect, and you must
 *                     provide your own logic in the onclick handler of these buttons instead.
 *                     To evaluate the [_onok] lambda, you can invoke [sys42.windows.confirm.ok],
 *                     To close dialogue, you can invoke [sys42.windows.confirm.close]
 *
 * If user closes modal dialogue, without clicking OK, then the given [_onok] is not evaluated.
 * There can be only one instance of this dialogue at the same time in your page.
 */
create-event:sys42.windows.confirm

  /*
   * Applying options for widget, with default values.
   * This lambda uses the boolean algebraic "OR" operator, combined with /$ (unique name), ending
   * up prioritizing specified argument, resorting to [_default] value if not given
   */
  _defaults
    _header:Information ...
    _body:You should really have supplied something intelligent here in the [_body] argument ...
    _class:modal fade
    _parent:cnt
    _onok
    _onclose
    _buttons
      literal
        element:button
        class:btn btn-default
        innerValue:OK
        oninit
          sys42.windows.confirm.initial-focus:x:/../*/_event?value
        onclick
          sys42.windows.confirm.close
          sys42.windows.confirm.ok
  _options
  add:x:/../*/_options
    src:x:@"(/../*/"":regex:/^_/""|/../*/_defaults/*)(!/_defaults!/_options)/$"

  /*
   * Making sure we delete any previously created dialogs.
   * Notice that sice we only hide the dialog when it is closed, we need
   * to check if any previous dialogs exist, and if so, delete them, before 
   * we create this one.
   */
  if
    fetch:x:/0/0?value
      widget-exist:confirm-window
    delete-widget:confirm-window

  /*
   * Appending buttons into footer of dialogue, which unless overridden through [_buttons], means
   * only the "OK" button.
   */
  add:x:/../*/create-widget/**/class/=modal-footer/./*/widgets
    src:x:/../*/_options/*/_buttons/*

  /*
   * Appending [_onok] into [sys42.windows.confirm.ok]
   */
  add:x:/../*/create-widget/*/events/*/sys42.windows.confirm.ok
    src:x:/../*/_options/*/_onok/*

  /*
   * Appending [_onclose] into [sys42.windows.modal.close]
   */
  add:x:/++/sys42.windows.modal.close
    src:x:/../*/_options/*/_onclose/*

  /*
   * Creating actual modal Widget, making sure we forward evaluate the [_header] and [_body]
   */
  eval-x:x:/+/*|/+/**(/=confirm-window-body|/=confirm-window-header)/*/innerValue
  create-widget:confirm-window
    parent:x:/../*/_options/*/_parent?value
    class:x:/../*/_options/*/_class?value
    _onclose
      sys42.windows.modal.close
        _close-client:bool:false
    events

      /*
       * Closes dialogue
       */
      sys42.windows.modal.close

        /*
         * Closing modal dialogue.
         */
        if:x:/../*/_close-client
          not
          or:x:/../*/_close-client?value
          send-javascript:@"$('#confirm-window').modal('toggle');"

        /*
         * Notice, the rest of this event might look empty, but above we are appending the [_onclose]
         * lambda callback supplied by caller into this event.
         */

      /*
       * Closes dialogue
       */
      sys42.windows.confirm.close
        send-javascript:@"$('#confirm-window').modal('toggle');"

      /*
       * Evaluates OK lambda object.
       * Notice the [_onok] lambda, passed in from caller, will be appended into this event.
       */
      sys42.windows.confirm.ok

      /*
       * Gives initial focus to a specific widget
       */
      sys42.windows.confirm.initial-focus
        send-javascript:@"$('#confirm-window').on('shown.bs.modal', function () {{$('#{0}').focus();}})"
          :x:/../*/_arg?value

    oninit

      /*
       * Making sure dialog becomes initially visible, and that we trap "onclose"
       */
      send-javascript:@"$('#confirm-window').modal('toggle').on('hide.bs.modal', function(){
  p5.$('confirm-window').raise('_onclose');
});"

    widgets
      container
        class:modal-dialog
        role:document
        widgets
          container
            class:modal-content
            widgets

              /*
               * Header of dialog
               */
              container
                class:modal-header
                widgets
                  literal
                    element:button
                    class:close
                    data-dismiss:modal
                    aria-label:Close
                    innerValue:&times;
                  literal:confirm-window-header
                    element:h4
                    innerValue:x:/../*/_options/*/_header?value

              /*
               * Body of dialog
               */
              container
                class:modal-body
                widgets
                  literal:confirm-window-body
                    element:div
                    innerValue:x:/../*/_options/*/_body?value

              /*
               * Footer of dialog, contains [_buttons], which by default means only "OK" button.
               */
              container
                class:modal-footer
                widgets
