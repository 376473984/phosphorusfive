
/*
 * Creates the Active Event that shows the user a modal window, with a set of custom widgets.
 *
 * Arguments;
 * 
 * [_header]         - Header of modal dialogue
 * [_body]           - Explanatory text of dialogue
 * [_class]          - Override the default CSS class
 * [_inner-class]    - Override the default inner CSS class. Set this to "modal-dialog modal-lg" to create a wider dialogue.
 * [_buttons]        - Makes it possible to exchange the default "OK" button with your own buttons
 *                     If you supply a [_buttons] parameter, then [_ok] has no effect, and you must
 *                     provide your own logic in the onclick handler of these buttons instead.
 *                     To evaluate the [.onok] lambda, you can invoke [sys42.windows.modal.ok],
 *                     To close dialogue, you can invoke [sys42.windows.modal.destroy]. If you wish to
 *                     make sure your [.oncancel] lambda is evaluated, you should use [sys42.windows.modal.cancel]
 *                     instead. [sys42.windows.modal.destroy] will not evaluate your [.oncancel] lambda callback.
 * [_widgets]        - Widget collection to append into the body parts of the modal window.
 * [.onok]           - Code to be evaluated if user clicks OK button
 * [.oncancel]       - Lambda callback to be evaluated if user closes dialogue without pressing "OK".
 *
 * If user closes modal dialogue, without clicking OK, then the given [.onok] is not evaluated.
 * There can be only one instance of this dialogue at the same time in your page.
 */
p5.events.create:sys42.windows.modal

  /*
   * Applying options for widget, with default values.
   *
   * This lambda uses the boolean algebraic "OR" operator, combined with /$ (unique name), ending
   * up prioritizing specified argument, resorting to [_defaults] if an expected argument was not given.
   */
  _defaults
    _header:Please supply input!
    _body
    _class:modal fade
    _inner-class:modal-dialog
    _buttons
      literal:sys42-modal-window-default-ok-button
        element:button
        class:btn btn-default
        innerValue:OK
        onclick
          sys42.windows.modal.ok
    .onok
    .oncancel
    _widgets
  _options
  add:x:/../*/_options
    src:x:@"/../*(/"":regex:/^_/""|/"":regex:/^\\./""|/_defaults/*)(!/_defaults!/_options)/$"

  /*
   * Making sure we delete any previously created dialogs.
   * Notice that since we only hide the dialog when it is closed, we need to check if any previous dialogs exist, 
   * and if so, delete them, before we create this one.
   */
  if
    fetch:x:/0/0?value
      p5.web.widgets.exists:sys42-windows-modal
    p5.web.widgets.delete:sys42-windows-modal

  /*
   * Appending buttons into footer of dialogue, which unless overridden through [_buttons], means
   * only the "OK" button.
   */
  add:x:/../*/p5.web.widgets.create-container/**/=sys42-windows-modal-footer/*/widgets
    src:x:/../*/_options/*/_buttons/*

  /*
   * Appending [_widgets] into body of dialogue, if there are any, otherwise we remove the "sys42-windows-modal-widgets" widget entirely.
   */
  if:x:/../*/_options/*/_widgets/*

    /*
     * Caller supplied a [_widgets] collection, making sure we append it into the correct container widget.
     */
    add:x:/../*/p5.web.widgets.create-container/**/=sys42-windows-modal-widgets/*/widgets
      src:x:/../*/_options/*/_widgets/*

  else

    /*
     * Caller did not supply a [_widgets] collection, removing the wrapper container entirely.
     */
    set:x:/../*/p5.web.widgets.create-container/**/=sys42-windows-modal-widgets

  /*
   * Checking if no [_body] was supplied, and if not, we entirely remove the "body content" widget.
   */
  if:x:/../*/_options/*/_body?value
    not
    or:x:/../*/_options/*/_body?value
      =:

    /*
     * Caller supplied no [_body], removing body literal widget.
     */
    set:x:/../*/p5.web.widgets.create-container/**/=sys42-windows-modal-body

  /*
   * Appending [.onok] lambda callback into [sys42.windows.modal._ok].
   */
  add:x:/../*/p5.web.widgets.create-container/*/events/*/sys42.windows.modal._ok/*/.lambda
    src:x:/../*/_options/*/.onok/*

  /*
   * Appending [.oncancel] lambda callback into [sys42.windows.modal._cancel].
   */
  add:x:/../*/p5.web.widgets.create-container/*/events/*/sys42.windows.modal._cancel/*/.lambda
    src:x:/../*/_options/*/.oncancel/*

  /*
   * Creating actual modal widget, making sure we forward evaluate the [_header], [_body], [class], in addition to 
   * the [class] for the [_inner-class] widget first.
   */
  eval-x:x:/../*/p5.web.widgets.create-container(/*/class|/**(/=sys42-windows-modal-body|/=sys42-windows-modal-header)/*/innerValue|/*/widgets/*/container/*/class)
  p5.web.widgets.create-container:sys42-windows-modal
    parent:cnt
    class:x:/../*/_options/*/_class?value
    .oncancel

      /*
       * We evaluate our [.oncancel], but we do it in such a way, that we do not transfer the closing JavaScript to
       * the client, since modal window was already closed on the client, if this event was raised.
       */
      sys42.windows.modal.cancel
        _close-client:bool:false

    events


      /*
       * Evaluates [.onok] lambda object.
       * Notice the [.onok] lambda, passed in from caller, will be appended into this event, inside of [.lambda].
       */
      sys42.windows.modal._ok

        /*
         * Contains the [.onok] lambda callback supplied when widget was created.
         */
        .lambda
        eval:x:/@.lambda

        /*
         * Returning results to caller.
         */
        return:x:/@eval?value


      /*
       * Closes dialogue, evaluating the [.oncancel] lambda callback.
       *
       * If you pass in [_close-client], and it is "false", then the JavaScript necessary to close the
       * modal window on the client will not be transferred. Otherwise, the JavaScript necessary to close the window
       * on the client will be automatically transferred.
       *
       * Notice, the [.oncancel] lambda callback, supplied when creating widget, will be passed into [.lambda] in this event.
       */
      sys42.windows.modal._cancel

        /*
         * Contains the [.oncancel] lambda callback passed into when instantiated.
         */
        .lambda
        eval:x:/@.lambda

    oninit

      /*
       * Making sure dialog becomes initially visible, and that we trap "hide", from where we invoke our [.oncancel] Ajax event, 
       * to make sure we evaluate the caller's [.oncancel] lambda callback, supplied when creating widget.
       */
      p5.web.send-javascript:@"$('#sys42-windows-modal').modal('toggle').on('hide.bs.modal', function(){p5.$('sys42-windows-modal').raise('.oncancel');});"

    widgets
      container
        class:x:/../*/_options/*/_inner-class?value
        role:document
        widgets
          container
            class:modal-content
            widgets

              /*
               * Header part of modal window.
               */
              container
                class:modal-header
                widgets

                  /*
                   * Close button in the top right corner ("X").
                   */
                  literal
                    element:button
                    class:close
                    data-dismiss:modal
                    aria-label:Close
                    innerValue:&times;

                  /*
                   * Header text/HTML of window.
                   */
                  literal:sys42-windows-modal-header
                    element:h4
                    innerValue:x:/../*/_options/*/_header?value

              /*
               * Body wrapper of modal window.
               */
              container:sys42-windows-modal-body-wrapper
                class:modal-body
                widgets

                  /*
                   * This is the body text [_body] supplied during creation of widget.
                   */
                  literal:sys42-windows-modal-body
                    element:div
                    innerValue:x:/../*/_options/*/_body?value

                  /*
                   * The widget wraps our [_widgets] collection, if any, supplied during creation of widget.
                   */
                  container:sys42-windows-modal-widgets
                    class:form
                    widgets
                    .onenterpressed

                      /*
                       * Finds the first button widget in the footer of the window, if any, and raises the [onclick] Ajax event on it.
                       */
                      p5.web.widgets.find:sys42-windows-modal-footer
                        element:button
                      if:x:/@p5.web.widgets.find/*/0?value
                        p5.web.widgets.ajax-events.raise:x:/@p5.web.widgets.find/*/0?value
                          onclick

                    oninit

                      /*
                       * Including JavaScript to help handle carriage return key in window.
                       *
                       * This logic, will make sure all "input" type of elements, traps carriage return, and invokes [.onenterpressed] when it occurs.
                       */
                      p5.web.widgets.find:x:/../*/_event?value
                        element:input
                      p5.web.widgets.property.set:x:/@p5.web.widgets.find/*/*?value
                        onkeypress:"return p5.sys42_windows_modal_onkeypress(event);"
                      p5.web.include-javascript:@"p5.sys42_windows_modal_onkeypress = function(e) {
  if(e.keyCode == 13) {
    p5.$('sys42-windows-modal-widgets').raise('.onenterpressed');
    return false;
  }
}"

              /*
               * Footer of dialog, contains [_buttons], which by default means only "OK" button.
               */
              container:sys42-windows-modal-footer
                class:modal-footer
                widgets
