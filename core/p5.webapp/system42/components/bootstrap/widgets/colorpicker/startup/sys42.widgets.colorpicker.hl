
/*
 * Creates an Ajax ColorPicker widget, which allows the user to pick a color, including the opacity for the color.
 *
 * Arguments;
 * 
 * [_value]            - Initial value for widget. Can be either '#xxyyzz', 'rgba(x,y,z,q)' or a 'named color' such as 'yellow'. Defaults to #000000.
 * [_class]            - CSS class to use. Defaults to "input-group colorpicker-component colorpicker-element".
 * [_label]            - If declared, will create a descriptive input-group-addon label, with the specified text.
 * [.onchange]         - Lambda callback invoked when the value of the colorpicker changes.
 *
 * In addition, the ColorPicker contains the following Active Events.
 *
 * [sys42.widgets.colorpicker.get-value]     - Retrieves the value of the widget. Expects the ID of the widget as its [_arg].
 * [sys42.widgets.colorpicker.set-value]     - Sets the value of the widget. Expects the ID of the widget as its [_arg], in addition
 *                                             to a [_value] being the new value.
 */
create-event:sys42.widgets.colorpicker

  /*
   * Applying options for widget, with default values.
   */
  _defaults
    _value:#000000
    _class:input-group colorpicker-component colorpicker-element
    .onchange
    _label
  _options
  add:x:/../*/_options
    src:x:@"/../*(/"":regex:/^_/""|/"":regex:/^\\./""|/_defaults/*)(!/_defaults!/_options)/$"


  /*
   * Passing in [.onchange] lambda callback such that it is evaluated upon change, and making sure
   * colorpicker is initialized knowing it has [.onchange].
   */
  if:x:/../*/_options/*/.onchange/*

    /*
     * We have an [.onchange] lambda callback.
     * Making sure we initialize widget, such that it invokes our [.onchange] during "hidePicker".
     */
    add:x:/../*/return/*/container/*/widgets/*/input/*/.onchange/*/.lambda
      src:x:/../*/_options/*/.onchange/*

  else

    /*
     * We do not have an [.onchange] lambda callback.
     * Making sure widget is initialized without the "hidePicker" event handler.
     */
    set:x:/../*/return/*/container/*/widgets/*/input/*/.onchange

  /*
   * Checking if [_label] was passed in, and if so, making sure colorpicker gets a descriptive input-group-addon, 
   * with the specified [_label].
   */
  if:x:/../*/_options/*/_label?value
    eval-x:x:/+/*/*/*
    insert-before:x:/../*/return/*/container/*/widgets/*/input
      src
        label
          class:input-group-addon
          innerValue:x:/../*/_options/*/_label?value

  /*
   * Forward evaluating arguments.
   */
  eval-x:x:/../*/return/*/container/*(/class|/widgets/*/input/*/value)

  /*
   * Returning color picker to caller.
   */
  return
    container
      class:x:/../*/_options/*/_class?value
      widgets
        input
          type:text
          class:form-control
          value:x:/../*/_options/*/_value?value
          oninit

            /*
             * Including Bootstrap (and jQuery)
             */
            sys42.bootstrap.p5.web.include-javascript
            sys42.bootstrap.include-css

            /*
             * Including Colorpicker's JavaScript and CSS.
             */
            p5.web.include-javascript-file:@BOOTSTRAP/widgets/colorpicker/media/js/bootstrap-colorpicker.min.js
            p5.web.include-css-file:@BOOTSTRAP/widgets/colorpicker/media/css/bootstrap-colorpicker.min.css

            /*
             * Retrieving parent widget, since it is needed later during JavaScript intialization of widget.
             */
            p5.web.widgets.get-parent:x:/../*/_event?value

            /*
             * Checking if we have an [.onchange] Ajax event for widget.
             */
            p5.web.widgets.ajax-events.list:x:/../*/_event?value
            if:x:/@p5.web.widgets.ajax-events.list/*/*/.onchange

              /*
               * We have an [.onchange] lambda callback, making sure it is evaluated when colorpicker is hidden.
               */
              p5.web.include-javascript:@"$('#{0}').colorpicker({{component:'.colorpicker-dropper'}}).on('hidePicker', function() {{p5.$('{1}').raise('.onchange')}});"
                :x:/@p5.web.widgets.get-parent/*/*?value
                :x:/../*/_event?value
            else

              /*
               * We do not have an [.onchange] lambda callback, initializing colorpicker without "hidePicker" event declared.
               */
              p5.web.include-javascript:@"$('#{0}').colorpicker({{component:'.colorpicker-dropper'}});"
                :x:/@p5.web.widgets.get-parent/*/*?value

          .onchange

            /*
             * Getting colorpicker's value, and invoking [.lambda] callback.
             */
            p5.web.widgets.property.get:x:/../*/_event?value
              value
            p5.web.widgets.get-parent:x:/../*/_event?value
            .lambda
            eval-x:x:/+/*
            eval:x:/@.lambda
              _value:x:/@p5.web.widgets.property.get/*/*?value
              _event:x:/@p5.web.widgets.get-parent/*/*?value

        span
          class:input-group-addon colorpicker-dropper
          widgets
            i
              innerValue:
