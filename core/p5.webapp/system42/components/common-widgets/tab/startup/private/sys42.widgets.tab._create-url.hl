
/*
 * Supporting Active Event, to create URL from given [_arg] value, with the given [_crawl-get-name] as the HTTP argument name.
 */
create-event:sys42.widgets.tab._create-url

  /*
   * First we get current location, without GET parameters, before we add the question mark to make sure we 
   * "open" our GET params collection.
   */
  get-location-url
  set:x:/@get-location-url?value
    src:{0}?
      :x:/@get-location-url?value

  /*
   * Then we must fetch all GET parameters, and remove any previously created "sys42_widgets_tab_unroll" params,
   * before we add all other GET parameters, to make sure we keep everything EXCEPT "sys42_widgets_tab_unroll".
   */
  list-http-get-params
  set:x:/@list-http-get-params/*/{0}
    :x:/../*/_crawl-get-name?value
  if:x:/@list-http-get-params/*
    get-http-get-param:x:/@list-http-get-params/*?name
    for-each:x:/@get-http-get-param/*
      url-encode:x:/@_dp/#?value
      set:x:/@get-location-url?value
        src:{0}{1}={2}&
          :x:/@get-location-url?value
          :x:/@_dp/#?name
          :x:/@url-encode?value

  /*
   * Adding key for our "unroll" GET parameter.
   */
  set:x:/../*/get-location-url?value
    src:{0}{1}=
      :x:/../*/get-location-url?value
      :x:/../*/_crawl-get-name?value

  /*
   * Then we can URL encode the parameter, and return URL to caller.
   */
  url-encode:x:/../*/_arg?value

  return:{0}{1}
    :x:/../*/get-location-url?value
    :x:/@url-encode?value

