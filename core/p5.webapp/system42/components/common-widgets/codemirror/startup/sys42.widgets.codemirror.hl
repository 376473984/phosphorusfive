
/*
 * Responsible for creating the CodeMirror Hyperlambda editor widget
 */
create-event:sys42.widgets.codemirror

  /*
   * Applying options for widget, with default values.
   * This lambda uses the boolean algebraic "OR" operator, combined with /$ (unique name), ending
   * up prioritizing specified argument, resorting to [_default] value if not given
   */
  _defaults
    _auto-focus:false
    _mode:hyperlambda
    _theme:paraiso.min
    _height:300px
  _options
  add:x:/../*/_options
    src:x:@"(/../*/"":regex:/^_/""|/../*/_defaults/*)(!/_defaults!/_options)/$"

  /*
   * Making sure necessary JavaScript files are included
   */
  include-javascript-file
    /system42/components/common-widgets/codemirror/media/lib/codemirror.js
    /system42/components/common-widgets/codemirror/media/addon/selection/active-line.js
    /system42/components/common-widgets/codemirror/media/addon/display/placeholder.js
    /system42/components/common-widgets/codemirror/media/addon/display/fullscreen.js
    /system42/components/common-widgets/codemirror/media/addon/hint/show-hint.js
  include-javascript-file:/system42/components/common-widgets/codemirror/media/mode/{0}/{0}.min.js
    :x:/../*/_options/*/_mode?value

  /*
   * Making sure necessary Stylesheet files are included
   */
  include-stylesheet-file
    /system42/components/common-widgets/codemirror/media/lib/codemirror.css
    /system42/components/common-widgets/codemirror/media/addon/display/fullscreen.css
    /system42/components/common-widgets/codemirror/media/addon/hint/show-hint.css
  include-stylesheet-file:/system42/components/common-widgets/codemirror/media/theme/{0}.css
    :x:/../*/_options/*/_theme?value

  /*
   * Retrieving "vocabulary" of server, for auto complete to work
   */
  vocabulary

  /*
   * Then removing all operators, since they're probably not thought of as Active Events by users.
   * In addition, we remove all events that contains "._" somehow, since they're considered "private events",
   * or "internal events".
   */
  set:x:/../*/vocabulary/*(/"=-"|/"=!~"|/"=!="|/=%|/=*|/"=/"|/"=^"|/"=\\~"|/=+|/=<|/=<=|/==|/=>|/=>=)
  join:x:/../*/vocabulary/*?value
    sep:,
    wrap:@""""

  /*
   * Sending JSON object containing full list of keywords to client
   */
  send-javascript:@"CodeMirror._hyperlispKeywords = [{0}];"
    :x:/../*/join?value

  /*
   * Making sure textarea input is replaced with the CodeMirror editor
   */
  send-javascript:@"p5['{0}'] = CodeMirror.fromTextArea(document.getElementById('{0}'), {{
mode:'hyperlambda',
theme:'paraiso',
lineNumbers:true,
styleActiveLine:true,
path:'/system42/components/common-widgets/codemirror/media/',
autofocus:{1},
tabSize:2,
indentAuto:true,
extraKeys: {{
  'Alt-F':function(cm) {{cm.setOption('fullScreen', !cm.getOption('fullScreen'));}},
  'Ctrl-Space':'autocomplete'}}
}});
p5['{0}'].on('change',function (cMirror) {{
  var wdg = p5.$('{0}');
  wdg.el.value = cMirror.getValue();
}});
CodeMirror.keyMap.default['Shift-Tab'] = 'indentLess';
CodeMirror.keyMap.default['Tab'] = 'indentMore';"
    :x:/../*/_arg?value
    :x:/../*/_options/*/_auto-focus?value

  /*
   * Then setting height.
   */
  send-javascript:@"p5['{0}'].setSize('100%', '{1}');"
    :x:/../*/_arg?value
    :x:/../*/_height?value

  /*
   * Then returning our "textarea" widget to caller
   */
  add:x:/+/*
    src:x:/../*/innerValue|/../*/events
  return
    literal
      element:textarea
