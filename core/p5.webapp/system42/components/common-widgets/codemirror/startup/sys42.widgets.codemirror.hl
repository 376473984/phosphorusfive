
/*
 * Responsible for creating the CodeMirror Hyperlambda editor widget
 *
 * Arguments;
 *
 * [_auto-focus] - If true, CodeMirror editor will gain initial focus upon load. Defaults to false.
 * [_mode] - Which language type to use. Defaults to 'hyperlambda'.
 * [_theme]  - Which theme to use, defaults to 'paraiso'.
 * [_height] - Height, add units, e.g. '250px'. Defaults to '300px'.
 * [_innerValue] - Initial code to display.
 * [_events] - Collection of associated widget lambda events.
 */
create-event:sys42.widgets.codemirror

  /*
   * Check if default Code-Mirror theme setting exists, and if not, create it.
   */
  sys42.utilities.get-app-setting:sys42.code-mirror-default-theme
    _app:sys42
  if:x:/-/*?value
    not

    /*
     * Making sure default "paraiso" Code-Mirror theme is used by default.
     */
    sys42.utilities.set-app-setting:sys42.code-mirror-default-theme
      _app:sys42
      _src:paraiso
    add:x:/@sys42.utilities.get-app-setting
      src:"sys42.code-mirror-default-theme:paraiso"

  /*
   * Applying options for widget, with default values.
   * This lambda uses the boolean algebraic "OR" operator, combined with /$ (unique name), ending
   * up prioritizing specified argument, resorting to [_default] value if not given
   */
  _defaults
    _auto-focus:false
    _mode:hyperlambda
    _theme:paraiso
    _height:300px
    _innerValue:
    _events
  _options

  /*
   * Applying default theme from settings, for then to finally apply arguments.
   */
  set:x:/../*/_defaults/*/_theme?value
    src:x:/@sys42.utilities.get-app-setting/*?value
  add:x:/../*/_options
    src:x:@"(/../*/"":regex:/^_/""|/../*/_defaults/*)(!/_defaults!/_options)/$"

  /*
   * Making sure necessary JavaScript files are included
   */
  include-javascript-file
    /system42/components/common-widgets/codemirror/media/lib/codemirror.js
    /system42/components/common-widgets/codemirror/media/addon/selection/active-line.js
    /system42/components/common-widgets/codemirror/media/addon/display/placeholder.js
    /system42/components/common-widgets/codemirror/media/addon/display/fullscreen.js
    /system42/components/common-widgets/codemirror/media/addon/hint/show-hint.js
  include-javascript-file:/system42/components/common-widgets/codemirror/media/mode/{0}/{0}.min.js
    :x:/../*/_options/*/_mode?value

  /*
   * Making sure necessary Stylesheet files are included
   */
  include-stylesheet-file
    /system42/components/common-widgets/codemirror/media/lib/codemirror.css
    /system42/components/common-widgets/codemirror/media/addon/display/fullscreen.css
    /system42/components/common-widgets/codemirror/media/addon/hint/show-hint.css
  include-stylesheet-file:/system42/components/common-widgets/codemirror/media/theme/{0}.min.css
    :x:/../*/_options/*/_theme?value

  /*
   * Retrieving "vocabulary" of server, for auto complete to work, among other things.
   */
  vocabulary

  /*
   * Then removing all operators, since they're probably not thought of as Active Events by users.
   * In addition, we remove all events that contains "._" somehow, since they're considered "private events",
   * or "internal events".
   */
  set:x:/../*/vocabulary/*(/"=-"|/"=!~"|/"=!="|/=%|/=*|/"=/"|/"=^"|/"=\\~"|/=+|/=<|/=<=|/==|/=>|/=>=)
  join:x:/../*/vocabulary/*?value
    sep:,
    wrap:@""""

  /*
   * Including JSON object containing full list of keywords to client.
   *
   * Notice, "include-javascript" in case we're having multiple Code-Mirror instances on page!
   */
  include-javascript:@"CodeMirror._hyperlispKeywords = [{0}];"
    :x:/../*/join?value

  /*
   * Making sure textarea input is replaced with the CodeMirror editor
   */
  send-javascript:@"p5['{0}'] = CodeMirror.fromTextArea(document.getElementById('{0}'), {{
mode:'hyperlambda',
theme:'{2}',
lineNumbers:true,
styleActiveLine:true,
path:'/system42/components/common-widgets/codemirror/media/',
autofocus:{1},
tabSize:2,
indentAuto:true,
extraKeys: {{
  'Alt-F':function(cm) {{cm.setOption('fullScreen', !cm.getOption('fullScreen'));}},
  'Ctrl-Space':'autocomplete'}}
}});
p5['{0}'].on('change',function (cMirror) {{
  var wdg = p5.$('{0}');
  wdg.el.value = cMirror.getValue();
}});
CodeMirror.keyMap.default['Shift-Tab'] = 'indentLess';
CodeMirror.keyMap.default['Tab'] = 'indentMore';"
    :x:/../*/_arg?value
    :x:/../*/_options/*/_auto-focus?value
    :x:/../*/_options/*/_theme?value

  /*
   * Then setting height.
   */
  send-javascript:@"p5['{0}'].setSize('100%', '{1}');"
    :x:/../*/_arg?value
    :x:/../*/_height?value

  /*
   * Then returning our "textarea" widget to caller, which becomes replaced with CodeMirror instance on client side.
   */
  if:x:/../*/_options/*/_events/*
    add:x:/+/*/*
      src:x:/../*/_options/*/_events/*
    add:x:/../*/return/*/literal
      src
        events
  eval-x:x:/+/*/*/innerValue
  return
    literal
      element:textarea
      innerValue:x:/../*/_options/*/_innerValue?value
