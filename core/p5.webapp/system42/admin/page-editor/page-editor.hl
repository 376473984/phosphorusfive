

/*
 * Creates our "Edit Page" Widget, which actually only contains 
 * a header, back link, and a couple of drop down lists to create 
 * new pages, and edit existing pages. In addition, it creates the 
 * "general properties toolbar" when a page is selected for editing.
 * The rest is done by "Specialized editors", found in 
 * "system42/admin/page-editor/editors", in addition to the templates
 * for new pages foun in "system42/admin/page-editor/templates".
 *
 * To support custom editors for your own types of pages, you will need
 * one file in both of those directories, matching the [type] of page
 * you store into the database when saving your page. If you do, you can 
 * "plug in" your own custom editors into the system, without having any 
 * dependencies between your own custom page types, and the rest of the
 * system, what so ever.
 *
 * Notice, if you do, you will also need a page to load up and display
 * your page in "system42/page-types"
 *
 */
create-widget:page-editor
  parent:content
  widgets


    /*
     * The "Create new page ..." drop down select list
     */
    container
      class:col-md-4 col-xs-12 form-group
      widgets
        container
          class:input-group
          widgets
            literal
              class:input-group-addon
              innerValue:Create
            container:create-new-page
              element:select
              class:form-control


              /*
               * Populates the "create new page" select drop down list
               */
              oninit
                sys42.populate-create-new-page


              /*
               * Here we create a new page according to which option item
               * was selected
               */
              onchange
                sys42.create-new-page


              /*
               * Lambda events for "Create new page" widget
               */
              events


                /*
                 * Here we loop through all files in "system42/admin/page-editor/editors",
                 * and create one "create new page" option item for each of those files
                 */
                sys42.populate-create-new-page
                  create-literal-widget
                    element:option
                    parent:create-new-page
                    value:_default
                    innerValue:New page ...
                  list-files:system42/admin/page-editor/editors
                  for-each:x:/-/*?name
                    split:x:/./*/__dp?value
                      =:/
                    split:x:/-/0/-?name
                      =:.
                    add:x:/..for-each/*/create-literal-widget
                      src:"value:{0}"
                        :x:/..for-each/*/split/[1,2]/0?name
                    add:x:/..for-each/*/create-literal-widget
                      src:"innerValue:{0}"
                        :x:/..for-each/*/split/[1,2]/0?name
                    create-literal-widget
                      element:option
                      parent:create-new-page


                /*
                 * Here we create a new page, according to what option user selected, by
                 * executing "system42/admin/page-editor/templates/create-new-X-page.hl"
                 * which is expected to create a new default page of selected type X
                 */
                sys42.create-new-page
                  get-widget-property:create-new-page
                    value
                  sys42.execute-lisp-file:system42/admin/page-editor/templates/create-new-{0}-page.hl
                    :x:/../*/get-widget-property/*/*?value
                  add:x:/../*/insert-data/0
                    src:"type:{0}"
                      :x:/../*/get-widget-property/*/*?value
                  add:x:/../*/insert-data/0
                    src:x:/./-2/*
                  select-data:x:/*/*/p5.page/"=~/change-this-"
                  _high:int:1
                  for-each:x:/../*/select-data/*?value
                    split:x:/./*/__dp?value
                      =:-
                    if
                      can-convert:x:/./-/0/-?name
                        type:int
                      and:x:/./-/0/-?name.int
                        more-than-equals:x:/../*/_high?value
                      set:x:/../*/_high?value
                        +:x:/..for-each/*/split/0/-?name.int
                          _:1
                  set:x:/../*/insert-data/0?value
                    src:/change-this-{0}
                      :x:/../*/_high?value
                  insert-data
                    p5.page
                      name:Change this
                  set-widget-property:create-new-page
                    value:_default
                  sys42.set-currently-edited-page:x:/../*/insert-data/0?value
                  sys42.populate-select-page
                  sys42.edit-page


    /*
     * The edit existing page select drop down list
     */
    container
      class:col-md-8 col-xs-12 form-group
      widgets
        container
          class:input-group
          widgets
            literal
              class:input-group-addon
              innerValue:Edit
            container:select-page
              element:select
              class:form-control


              /*
               * Here we selected the currently edited page, if any, and 
               * load up the correct page editor
               */
              oninit
                sys42.populate-select-page
                if
                  sys42.get-currently-edited-page
                  sys42.edit-page

              /*
               * Here we start editing the selected page
               */
              onchange
                sys42.page-was-selected-for-editing


              /*
               * Lambda events for "Select existing page to edit" widget
               */
              events


                /*
                 * Stores the currently edited page in session
                 */
                sys42.set-currently-edited-page
                  set-session:sys42.currently-edited-page
                    src:x:/../*/_arg?value


                /*
                 * Returns the currently edited page
                 */
                sys42.get-currently-edited-page
                  get-session:sys42.currently-edited-page
                  set:x:/..?value
                    src:x:/./-/*?value


                /*
                 * Retrieves all pages from database, and creates
                 * one option item for each of them, to allow editing
                 */
                sys42.populate-select-page
                  clear-widget:select-page
                  create-literal-widget
                    element:option
                    parent:select-page
                    value:_default
                    innerValue:Choose existing page to edit ...
                  sys42.get-currently-edited-page
                  select-data:x:/*/*/p5.page
                  for-each:x:/-/*
                    set:x:/..for-each/*/create-literal-widget/*/value?value
                      src:x:/..for-each/*/__dp/#?value
                    set:x:/..for-each/*/create-literal-widget/*/innerValue?value
                      src:{0} - [{1}]
                        :x:/..for-each/*/__dp/#/*/name?value
                        :x:/..for-each/*/__dp/#/*/type?value
                    if:x:/../*/sys42.get-currently-edited-page?value
                      equals:x:/..for-each/*/__dp/#?value
                      add:x:/..for-each/*/create-literal-widget
                        src
                          selected
                    create-literal-widget
                      element:option
                      parent:select-page
                      value
                      innerValue


                /*
                 * Invoked when user selects a page for editing. Retrieves which page
                 * user wants to edit, and starts the correct page editor according to
                 * user's request
                 */
                sys42.page-was-selected-for-editing
                  get-widget-property:select-page
                    value
                  sys42.set-currently-edited-page:x:/-/*/*(!/=_default)?value
                  if:x:/-2/*/*(!/=_default)?value
                    sys42.edit-page
                  else
                    clear-widget:page-editor-surface


    /*
     * This is the widget where the actual editing occurs. It
     * will contain an "edit property" part, which for the most
     * parts is common for all types of pages, with a "Name", "URL"
     * property, etc, in addition to the custom editor, which depends
     * upon the type of page user is editing
     */
    container:page-editor-surface


      /*
       * Lambda events for "Page Editor main surface"
       */
      events


        /*
         * Invoked when a page is selected for editing, either because
         * it was just created, or because an existing page was selected
         * for editing. Clears the editor surface, in case another page is
         * already being edited, and starts the editing process. Which means
         * that it loads up the "common toolbar" for common settings, such as
         * "Name", "URL", etc, in addition to starting the custom editor, which
         * depends upon the [type] of page, and can be found in
         * "system42/admin/page-editor/editors"
         */
        sys42.edit-page
          clear-widget:page-editor-surface
          sys42.get-currently-edited-page
          if:x:/-?value
            select-data:x:/*/*/p5.page/"={0}"/*/type?value
              :x:/../*/sys42.get-currently-edited-page?value
            add:x:/..if/*/sys42.execute-lisp-file
              src:"_id:{0}"
                :x:/../*/sys42.get-currently-edited-page?value
            add:x:/..if/*/sys42.create-editor-toolbar
              src:"_id:{0}"
                :x:/../*/sys42.get-currently-edited-page?value
            sys42.create-editor-toolbar
            sys42.execute-lisp-file:system42/admin/page-editor/editors/{0}.hl
              :x:/..if/*/select-data/*?value
              _parent-widget:page-editor-editor-surface


        /*
         * Creates the common toolbar for editing pages. Contains 
         * the common properties of pages, such as "Name", "URL", etc.
         */
        sys42.create-editor-toolbar
          add:x:/+
            src:x:/../*/_id
          sys42.execute-lisp-file:system42/admin/page-editor/editor-toolbar.hl

