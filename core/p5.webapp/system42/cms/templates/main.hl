/*
 * Template for showing [p5.page] objects. Will create
 * a black navbar menu at the top, containing links
 * to pages user has access to, in addition to a login
 * or logout button which allows user to login and logout
 */


/*
 * Creating our main template webpage
 */
create-widget:template-root
  class:container
  widgets

    /*
     * Our main bootstrap navbar menu, stuck to the top, by default
     */
    container
      has-id:false
      element:nav
      class:navbar navbar-default navbar-fixed-top navbar-inverse
      widgets
        container
          has-id:false
          class:container-fluid
          widgets
            container
              has-id:false
              class:navbar-header
              widgets

                /*
                 * Toggles visibility of navbar, only visible in small screen resolutions
                 */
                literal:toggle-navbar
                  element:button
                  type:button
                  class:navbar-toggle collapsed
                  data-toggle:collapse
                  data-target:#navbar-main
                  aria-expanded:false
                  innerValue:@"<span class=""icon-bar""></span>"

                /*
                 * X-Ray button, to inspect widgets on page
                 */
                literal:x-ray
                  element:a
                  href:
                  class:navbar-brand navbar-icon-p5
                  title:X-Ray Inspector
                  accesskey:Q
                  _on-x-ray
                    get-http-param:_x-ray-clicked
                    add:x:/+
                      src:x:/./-/*
                    sys42.execute-lisp-file:/system42/apps/x-ray-inspector/launch.hl
                  onclick
                    sys42.info-window:@"Click any element on screen to view its server side Hyperlisp code. Refresh page to turn off X-Ray Inspector"
                      _time:more
                    send-javascript:@"$('*').click(function(e){e.preventDefault();});
$('[onclick]').removeAttr('onclick');
$('body').css('cursor', 'pointer');
$('body').css('background-color', 'rgba(125,255,128,.5)');
$('body').click( function(e) {
  var path = '';
  var cur = e.target;
  while (cur !== null) {
    if(cur.id) {
      if(path !== '') {
        path += '|';
      }
      path += cur.id;
    }
    cur = cur.parentNode;
  }
  p5.$('x-ray').raise('_on-x-ray', {
    onbefore: function (pars,evt){
      pars.push(['_x-ray-clicked', path]);
    }
  });
  $('body').off('click');
  $('body').css('cursor', 'default');
});
"

            /*
             * Main menu items wrapper
             */
            container
              has-id:false
              class:collapse navbar-collapse
              widgets

                /*
                 * This is where all your menu items ends up, as child widgets
                 */
                container:main-menu
                  element:ul
                  class:nav navbar-nav
                  oninit
                    sys42.create-main-menu
                  events


                    /*
                     * Creates the menu of our page
                     */
                    sys42.create-main-menu

                      /*
                       * Making sure we delete any previous menus created
                       */
                      clear-widget:main-menu

                      /*
                       * Retrieving current Context user for later, since we'll need to check his role, 
                       * to see which pages he or she has access to
                       */
                      whoami

                      /*
                       * Selecting all [p5.page] objects from database, and looping through them, to
                       * create a menu item for each [p5.page] object current Context user has access to
                       */
                      select-data:x:/*/*/p5.page
                      for-each:x:/-/*

                        // Menu item "template"
                        _create-item
                          create-literal-widget
                            parent:main-menu
                            element:li
                            innerValue

                        // Verifying user has access to currently iterated [p5.page] object
                        if
                          sys42.verify-access:x:/..for-each/*/__dp/#/*/role?value
                          set:x:/..for-each/*/_create-item/*/*/innerValue?value
                            src:@"<a href=""{0}"">{1}</a>"
                              :x:/..for-each/*/__dp/#?value
                              :x:/..for-each/*/__dp/#/*/name?value
                          eval:x:/..for-each/*/_create-item
                          
                      /*
                       * Adding login/logout button to menu
                       */
                      if:x:/../*/whoami/*/default?value
                        =:bool:true

                        /*
                         * This is the default Context user, and hence user is not logged in
                         * Creating our login menu item
                         */
                        create-widget:login-menu-button
                          parent:main-menu
                          element:li
                          widgets
                            literal
                              element:a
                              href:
                              innerValue:Login
                              onclick
                                sys42.show-login-window
                              events

                                /*
                                 * Shows the login user window
                                 */
                                sys42.show-login-window

                                  /*
                                   * Making sure we hide login menu button
                                   */
                                  set-widget-property:login-menu-button
                                    visible:false

                                  /*
                                   * Sends and includes JavaScript to page, to be able to handle Carriage Return and Escape 
                                   * keys in login window
                                   */
                                  send-javascript:"$('#toggle-navbar').click();setTimeout(function(){$('#username').focus().select();},250);"
                                  include-javascript:@"p5.loginUsernameKeyPressed = function(e) {
  if(e.keyCode == 13) {
    p5.$('login-button').raise('onclick');
    return false;
  }
}
p5.loginUsernameKeyUp = function(e) {
  if(e.keyCode == 27) {
    p5.$('login-button').raise('_onhide');
  }
}"

                                  /*
                                   * Creates the window encapsulating the login window
                                   */
                                  create-widget:login-wrapper
                                    class:form-inline col-md-5 col-md-push-1 col-xs-3 flash-from-left
                                    parent:header-wrapper
                                    widgets
                                      container:login-controls
                                        class:form-group
                                        widgets
                                          void:username
                                            class:form-control input-sm
                                            element:input
                                            type:text
                                            placeholder:Username ...
                                            onkeypress:"return p5.loginUsernameKeyPressed(event);"
                                            onkeyup:"p5.loginUsernameKeyUp(event);"
                                          void:password
                                            class:form-control input-sm
                                            element:input
                                            type:password
                                            placeholder:Password ...
                                            onkeypress:"return p5.loginUsernameKeyPressed(event);"
                                            onkeyup:"p5.loginUsernameKeyUp(event);"
                                          literal:login-button
                                            element:button
                                            class:btn btn-default form-control input-sm
                                            innerValue:login
                                            onclick
                                              sys42.login-button-clicked
                                            _onhide
                                              delete-widget:login-wrapper
                                              set-widget-property:login-menu-button
                                                visible:true
                                            events

                                              /*
                                               * Logs in user according to values of "username" and "password" widgets
                                               * in login form
                                               */
                                              sys42.login-button-clicked

                                                /*
                                                 * Retrieves username and password supplied by user
                                                 */
                                                get-widget-property:username
                                                  value
                                                get-widget-property:password
                                                  value

                                                /*
                                                 * Sets the username and password field's values to our [login] Active Event
                                                 */
                                                set:x:/+2/0/*/username?value
                                                  src:x:/././*/get-widget-property/[0,1]/+/<?value
                                                set:x:/+1/0/*/password?value
                                                  src:x:/././*/get-widget-property/[1,2]/+/<?value
                                                if
                                                  login
                                                    username
                                                    password
                                                    persist:bool:true

                                                  /*
                                                   * User was successfully logged in, reloading location to
                                                   * make sure user sees page in context of his newly logged in credentials
                                                   */
                                                  reload-location
                                                else

                                                  /*
                                                   * User supplied wrong credentials
                                                   */
                                                  set-widget-property:login-controls
                                                    class:form-group has-error
                                                  send-javascript:"p5.wrongCredentials();"
                                      

                      else

                        /*
                         * User has previously logged in with his or hers credentials
                         * Creating the logout button
                         */
                        create-widget
                          parent:main-menu
                          element:li
                          widgets
                            literal
                              element:a
                              href:
                              innerValue:Logout
                              onclick
                                sys42.logout
                              events

                                /*
                                 * Deleting all user's session items and emptying "tmp" folder, 
                                 * before logging user out and reloading location, to make sure user
                                 * sees page in context of default Context user
                                 */
                                sys42.logout
                                  list-session-keys
                                  set-session-value:x:/-/*?name
                                  sys42.empty-user-tmp-folder
                                  logout
                                  reload-location


    /*
     * Page content starts here, header first
     */
    container:header-wrapper
      class:row
      widgets
        container
          has-id:false
          class:col-md-7 col-xs-9
          widgets

            /*
             * Header of page
             */
            literal:header
              element:h1
              innerValue:{header}


    /*
     * Actual dynamic content comes here, after navbar menu at top, 
     * and header above
     */
    container:content
      class:row content-row
      widgets
        literal
          element:div
          class:col-xs-12
          innerValue:{content}


    /*
     * Copyright notice, and general (muted) information here
     */
    container:footer
      class:row
      widgets
        literal
          element:small
          has-id:false
          class:col-md-6 text-muted text-center col-md-push-3 prepend-top col-xs-12
          innerValue:@"Liberated Software, Copyleft © 
<a href=""https://phosphorusfive.wordpress.com/2015/11/22/liberated-software-defined/"">Thomas Hansen</a>"


