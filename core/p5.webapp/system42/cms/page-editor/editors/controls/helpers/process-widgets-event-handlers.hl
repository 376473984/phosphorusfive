
/*
 * Given a node [_node] by reference, will loop through
 * all descendant nodes, that have [literal]/[container]/[void]
 * parents, who's names starts with [on], and prepend an underscore "_"
 * to these nodes' names.
 * 
 * This is necessary to rename all event handler in widgets in WYSIWYG
 * design surface, such that user can navigate design surface, without
 * triggering events on buttons and other types of widgets
 */


/*
 * Looping through each event handler in given lambda
 */
for-each:x:/../*/_node/#/**(/~literal/*/~on|/~container/*/~on|/~void/*/~on)
  if
    fetch:x:/0/0?value
      index-of:x:/..for-each/*/_dp/#?name
        what:on
    =:int:0

    /*
     * Checking if this is a user control, and if so, making sure we keep
     * the [oninit] event, to allow rendering its content on WYSIWYG surface,
     * while also modifying it, such that none of its dynamically loaded widgets
     * have their events tied up. This is done by modifying the [oninit] event
     * of the [container] wrapping the usercontrol, such that after [select-data]
     * has been evaluated, but before the controls are created, all [onXXX] events
     * of [literal]/[container]/[void] are entirely removed.
     * 
     * The [_design-time-remover] is added, such that we can remove this logic, when
     * design time data is requested by main Page editor, to be saved into database.
     */
    if:x:/..for-each/*/_dp/#?name
      =:oninit
      and:x:/..for-each/*/_dp/#/./*/data-usercontrol?value.bool

      /*
       * This is [oninit] for usercontrol, slightly modifying it. But making sure every
       * single event handler, of every single child widget, created as a consequence of 
       * the [oninit] being evaluated, is removed, except for any "nested" usercontrols' 
       * [oninit] event, which is necessary to make sure usercontrol is being rendered in
       * design WYSIWYG surface, the same way it will be shown on the resulting page like
       */
      insert-before:x:/..for-each/*/_dp/#/*/eval
        src

          /*
           * This next node is here such that we can "undo" the modifications to the [oninit] event handler
           * of usercontrols when page is being saved
           */
          _design-time-remover

          /*
           * Deletes all [onXXX] event handlers, except [oninit] event handlers for usercontrols, by looping through
           * everything that's a "close match", for then to verify it's an "exact match" for an event
           */
          for-each:x:/../*/select-data/**(/~container/*/~on(!/./*/data-usercontrol/=true/./*/oninit)|/~literal/*/~on|/~void/*/~on)

            /*
             * Checking that node's name starts with "on", has at least three more characters, which must be a-z. Meaning
             * stuff like [data-foo] and [onX] and [onfoo3] is ignored. Which should result in removing all DOM event handlers,
             * leaving the rest alone
             */
            if
              fetch:x:/0/0/0
                match:x:/..for-each/*/_dp/#?name
                  what:regex:/^on[a-z]{3}$/
              set:x:/..for-each/*/_dp/#

          /*
           * Making sure we recursively call "self" for each nested usercontrol inside of current usercontrol
           */
          set:x:/+/*/_node?value
            src:x:/../*/select-data
          sys42.execute-lisp-file:/system42/cms/page-editor/editors/controls/helpers/process-widgets-event-handlers.hl
            _node

    else-if:x:/..for-each/*/_dp/#?name
      !=:oninit

      /*
       * This is an event handler, and it is not a usercontrol, and it is not an [oninit] event handler.
       * Renaming event handler temporarily for design surface, which means prepending
       * an underscore (_) to its name, to avoid conflicts when clicking widget in design surface,
       * to navigate selected widgets
       */
      set:x:/..for-each/*/_dp/#?name
        src:_{0}
          :x:/..for-each/*/_dp/#?name

