/*
 * Editor for [controls] types of pages
 */

/*
 * Loading page from database
 */
select-data:x:/*/*/p5.page/"={0}"
  :x:/../*/_id?value


/*
 * Setting the content of WYSIWYG surface to the [controls] from database,
 * converting to lambda from Hyperlisp first
 */
lisp2lambda:x:/../*/select-data/*/*/controls?value


/*
 * Then adding [onclick] event handlers for each widget, to
 * allow widget to be selected by clicking it in design surface
 */
add:x:/../*/lisp2lambda/**(/literal|/container|/void)
  src
    onclick
      sys42.wysiwyg-controls.select-widget:x:/../*/_event?value
      sys42.wysiwyg-controls.databind-select-control

/*
 * Before finally adding widget to [create-widget] invocation below
 */
if:x:/../*/lisp2lambda/*(/container|/literal|/void)
  add:x:/../*/create-widget/*/widgets/*/container/=wysiwyg-editor-surface/*/widgets
    src:x:/../*/lisp2lambda/*


/*
 * Adding widget types to 'WYSIWYG add control toolbar'
 */
_widgets
  label
  span
  div
  p
  strong
  em
  blockquote
  pre
  br
  cite
  code
  small
  hr
  a
  _
  h1
  h2
  h3
  h4
  h5
  h6
  header
  address
  article
  footer
  nav
  section
  list
  _
  video
  audio
  check
  radio
  select
  text
  password
  color
  email
  search
  textarea
for-each:x:/-/*
  _widget
    button
      class:btn btn-default
      innerValue
      onclick
        get-widget-property:x:/../*/_event?value
          innerValue
        sys42.wysiwyg-controls.add-control:x:/../*/get-widget-property/*/*?value
  if:x:/..for-each/*/_dp/#?name
    =:_
    add:x:/../*/create-widget/=wysiwyg-editor/*/widgets/*/container/=wysiwyg-controls-toolbar/*/widgets
      src
        br
  else
    set:x:/..for-each/*/_widget/*/*/innerValue?value
      src:x:/..for-each/*/_dp/#?name
    add:x:/../*/create-widget/=wysiwyg-editor/*/widgets/*/container/=wysiwyg-controls-toolbar/*/widgets
      src:x:/..for-each/*/_widget/*


/*
 * Adding delete, copy, paste buttons, etc to 'WYSIWYG control toolbar'
 */
add:x:/../*/create-widget/=wysiwyg-editor/*/widgets/*/container/=wysiwyg-controls-toolbar/*/widgets
  src
    container
      class:form-inline prepend-top
      widgets
        select:wysiwyg-select-control
          oninit
            sys42.wysiwyg-controls.databind-select-control
          onchange
            get-widget-property:wysiwyg-select-control
              value
            if:x:/../*/get-widget-property/*/*?value
              =:_default
              sys42.wysiwyg-controls.unselect-widget
            else
              sys42.wysiwyg-controls.select-widget:x:/../*/get-widget-property/*/*?value
          class:form-control col-xs-6 prepend-right
          widgets
          events

            /*
             * Raised whenever the 'select widget' dropdown list 
             * needs to be re-databound
             */
            sys42.wysiwyg-controls.databind-select-control
              clear-widget:wysiwyg-select-control
              create-literal-widget
                parent:wysiwyg-select-control
                element:option
                innerValue:Choose widget ...
                value:_default
              find-widget
                _selected:true
              sys42.get-widget:wysiwyg-editor-surface
                _keep-empty-ids:true
              for-each:x:/../*/sys42.get-widget/*/**(/container|/literal|/void)
                _option
                  create-literal-widget
                    element:option
                    parent:wysiwyg-select-control
                    innerValue
                    value
                set:x:/..for-each/*/_option/*/*/innerValue?value
                  src:{0} - {1} - {2}
                    :x:/..for-each/*/_dp/#?name
                    :x:/..for-each/*/_dp/#/*/element?value
                    :x:/..for-each/*/_dp/#?value
                set:x:/..for-each/*/_option/*/*/value?value
                  src:x:/..for-each/*/_dp/#?value
                if:x:/../*/find-widget/*?value
                  =:x:/..for-each/*/_dp/#?value
                  add:x:/..for-each/*/_option/*
                    src:selected
                eval:x:/./*/_option

        /*
         * Delete widget button
         */
        button:wysiwyg-button-delete
          class:btn btn-default glyphicon glyphicon-trash
          title:Delete currently selected widget
          disabled
          onclick
            sys42.confirm-window
              _header:Confirm deletion!
              _body:Are you sure you wish to <strong>delete currently selected widget</strong> from form? This action cannot be undone!
              _onok
                find-widget
                  _selected:true
                delete-widget:x:/../*/find-widget/*?value
                set-widget-property:wysiwyg-button-delete
                  disabled
                sys42.wysiwyg-controls.databind-select-control
                set-widget-property:wysiwyg-controls-properties
                  visible:false

        /*
         * Add attribute to widget button
         */
        button:wysiwyg-button-add-attribute
          class:btn btn-default glyphicon glyphicon-plus
          title:Add attribute to widget
          disabled
          onclick
            sys42.execute-lisp-file:/system42/cms/page-editor/editors/controls/add-attribute.hl


/*
 * Forward evaluate the expressions in [create-widget], before
 * creating WYSIWYG widget
 */
eval-x:x:/+/*
create-widget:wysiwyg-editor
  parent:x:/../*/_parent-widget?value
  class:col-xs-12
  widgets

    /*
     * Toolbar for adding widgets to surface
     */
    container:wysiwyg-controls-toolbar
      class:prepend-bottom
      widgets

    /*
     * Properties for chosen widget
     */
    container:wysiwyg-controls-properties
      class:form row
      visible:false

    /*
     * Actual WYSIWYG design surface
     */
    container:wysiwyg-editor-surface
      style:"min-height:400px;background-color:rgba(0,255,0,.1);border-radius:5px;"
      onclick
        sys42.wysiwyg-controls.unselect-widget
        sys42.wysiwyg-controls.databind-select-control
      widgets


  /*
   * Lambda events for Editor Surface
   */
  events


    /*
     * "Sink" event required by main editor to retrieve data
     * from specialized editor during saving process
     */
    sys42.get-page-editor-data

      /*
       * Retrieving 'raw widget' from surface
       */
      sys42.get-widget:wysiwyg-editor-surface

      /*
       * Making sure we remove the [_selected] attribute, 
       * which is used to track the currently selected widget in surface.
       * In addition to removing the selected widget's [style] properties
       */
      set:x:/../*/sys42.get-widget/**/_selected
      set:x:@"/../*/sys42.get-widget/**/style/""=box-shadow: 5px 5px 5px #888888;border:dashed 1px black;"""

      /*
       * Removing all 'select by clicking' event handlers, only relevant
       * while designing widget
       */
      set:x:/../*/sys42.get-widget/**/onclick

      /*
       * Returning [controls] to caller
       */
      insert-before:x:/../0
        src:controls
      lambda2lisp:x:/../*/sys42.get-widget/*/*/widgets/*
      set:x:/../0?value
        src:x:/../*/lambda2lisp?value

      /*
       * Returning [type] of page to caller
       */
      insert-before:x:/../0
        src
          type:controls

    /*
     * Invoked when a generic control is added to the page
     */
    sys42.wysiwyg-controls.add-control

      /*
       * Retrieves insertion position, which might differ according to whether or
       * not a widget is selected on page or not
       */
      sys42.wysiwyg-controls.get-insertion-position

      /*
       * Retrieving default properties, which differs from widget type
       */
      sys42.wysiwyg-controls.get-default-properties:x:/../*/_arg?value

      /*
       * Adding 'insertion position' to create-widget Active Event invocation
       */
      add:x:/../*/_create-widget
        src:x:/../*/sys42.wysiwyg-controls.get-insertion-position/*

      /*
       * Adding default properties
       */
      add:x:/../*/_create-widget
        src:x:/../*/sys42.wysiwyg-controls.get-default-properties/*

      /*
       * Checking if an explicit [element] was given, and if not, choose
       * the name of the widget type. Otherwise, use the explicit [element]
       * declaration
       */
      if:x:/../*/sys42.wysiwyg-controls.get-default-properties/*/element
        not
        add:x:/../*/_create-widget
          src:"element:{0}"
            :x:/../*/_arg?value

      /*
       * Adding [onclick] event handler, such that user can select widget
       * in WYSIWYG screen by clicking it
       */
      add:x:/../*/_create-widget
        src
          onclick
            sys42.wysiwyg-controls.select-widget:x:/../*/_event?value
            sys42.wysiwyg-controls.databind-select-control

      /*
       * Checking widget creation Active Event, which might be
       * [create-widget] (container)
       * [create-literal-widget] (innerValue type of widget)
       * [create-void-widget] (widget with neither [widgets] nor [innerValue])
       */
      if:x:/../*/sys42.wysiwyg-controls.get-default-properties/*/widgets
        set:x:/../*/_create-widget?name
          src:create-container-widget
      else-if:x:/../*/sys42.wysiwyg-controls.get-default-properties/*/innerValue
        set:x:/../*/_create-widget?name
          src:create-literal-widget
      else
        set:x:/../*/_create-widget?name
          src:create-void-widget

      /*
       * At this point, Active Event invocation below, should have been adequately built
       * for correctly inserting our widget into surface
       */
      _create-widget
      sys42.wysiwyg-controls.select-widget:x:/-?value
      sys42.wysiwyg-controls.databind-select-control

    /*
     * Returns the position where to insert a new control
     */
    sys42.wysiwyg-controls.get-insertion-position
      find-widget
        _selected:true

      /*
       * As a general rule, if any widget is currently selected, we insert
       * the new widget after the currently selected widget. Otherwise, 
       * we append the widget into the main design surface
       */
      if:x:/../*/find-widget/*
        eval-x:x:/+/*
        return
          after:x:/../*/find-widget/*?value
      else
        return
          parent:wysiwyg-editor-surface

    /*
     * Returns default properties for specific type of control,
     * takes type of control as [_arg]
     */
    sys42.wysiwyg-controls.get-default-properties
      switch:x:/../*/_arg?value
        case:label
        case:span
        case:p
        case:strong
        case:em
        case:blockquote
        case:pre
        case:cite
        case:code
        case:small
        case:a
        case:h1
        case:h2
        case:h3
        case:h4
        case:h5
        case:h6
        case:h5
        case:h5
        case:h5
        case:h5
        case:h5
        case:h5
        case:h5
        case:h5
          return
            innerValue:Foo bar
        case:div
        case:header
        case:address
        case:article
        case:footer
        case:nav
        case:section
        case:div
          return
            widgets
        case:br
        case:hr
          return
        case:list
          return
            element:ul
            widgets
              li
                innerValue:Item 1
              li
                innerValue:Item 2
        case:video
          return
            element:video
            src:"http://some-url.com/video.ogg"
            controls
            innerValue:Upgrade your browser
        case:audio
          return
            element:audio
            src:"http://some-url.com/video.ogg"
            controls
            innerValue:Upgrade your browser
        case:check
          return
            element:input
            type:checkbox
            checked
        case:radio
          return
            element:input
            type:radio
        case:select
          return
            element:select
            widgets
              option
                has-id:false
                value:foo1
                innerValue:Foo 1
              option
                has-id:false
                value:foo2
                innerValue:Foo 2
        case:text
          return
            element:input
            type:text
        case:password
          return
            element:input
            type:password
        case:color
          return
            element:input
            type:color
        case:email
          return
            element:input
            type:email
        case:search
          return
            element:input
            type:search
        case:textarea
          return
            element:textarea
            innerValue:Foo bar!

    /*
     * Unselects any selected widgets on page
     */
    sys42.wysiwyg-controls.unselect-widget
      find-widget
        _selected:true

      /*
       * Unselecting previously selected widget, if it exists
       */
      if:x:/../*/find-widget/*
        delete-widget-property:x:/../*/find-widget/*?value
          _selected
          style
      set-widget-property:wysiwyg-controls-properties
        visible:false

      /*
       * Hiding buttons that should only be visible while widget is selected
       */
      set-widget-property:wysiwyg-button-delete
        disabled
      set-widget-property:wysiwyg-button-add-attribute
        disabled

    /*
     * Selects the given widget on page
     */
    sys42.wysiwyg-controls.select-widget
      find-widget
        _selected:true

      /*
       * Unselecting previously selected widget, if it exists
       */
      if:x:/../*/find-widget/*
        delete-widget-property:x:/../*/find-widget/*?value
          _selected
          style

      /*
       * Making sure selected widget is visible, but only if the clicked
       * widget was NOT the one already selected
       */
      if:x:/../*/_arg?value
        !=:x:/../*/find-widget/*?value

        /*
         * Another widget was selected
         */
        set-widget-property:x:/../*/_arg?value
          _selected:true
          style:"box-shadow: 5px 5px 5px #888888;border:dashed 1px black;"

        /*
         * Showing widget's properties widget
         */
        sys42.wysiwyg-controls.show-selected-widgets-properties:x:/../*/_arg?value

        /*
         * Showing buttons that should only be visible while widget is selected
         */
        delete-widget-property:wysiwyg-button-delete
          disabled
        delete-widget-property:wysiwyg-button-add-attribute
          disabled
      else

        /*
         * The widget that was already selected was UN-selected.
         * Hiding widget's properties widget
         */
        sys42.wysiwyg-controls.hide-selected-widgets-properties

        /*
         * Hiding buttons that should only be visible while widget is selected
         */
        set-widget-property:wysiwyg-button-delete
          disabled
        set-widget-property:wysiwyg-button-add-attribute
          disabled

    /*
     * Shows the widget's properties widget, allowing user to
     * edit properties of widget
     */
    sys42.wysiwyg-controls.show-selected-widgets-properties
      set:x:/+/*/_widget?value
        src:x:/../*/_arg?value
      sys42.execute-lisp-file:/system42/cms/page-editor/editors/controls/widget-properties.hl
        _widget

    /*
     * Hides the widget's properties widget
     */
    sys42.wysiwyg-controls.hide-selected-widgets-properties
      set-widget-property:wysiwyg-controls-properties
        visible:false
