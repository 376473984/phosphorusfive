/*
 * Creates the __[desktop.modules.install]__ Active Event that's responsible for installing an app from a zip file.
 *
 * Optionally expects __[local-url]__ being the local folder name for app after installation,
 * in addition to __[\_arg]__ pointing to the zip file containing your module.
 */
create-event:desktop.modules.install

  /*
   * Sanity checking arguments.
   */
  micro.lambda.contract.min:x:/..
    _arg:string
  micro.lambda.contract.optional:x:/..
    local-url:string

  /*
   * Defaults, used if no [local-url] argument was supplied.
   */
  .defaults
    local-url

  /*
   * Checking if caller did not supply a [local-url], 
   * at which point we use the zip file's filename.ÃŸ
   */
  if:x:/../*/local-url?value
    not

    /*
     * Using filename as [local-url].
     */
    split:x:/../*/_arg?value
      =:/
      =:.
    set:x:/@.defaults/*/local-url?value
      src:x:/@split/0/-2?name

  /*
   * Uninstalling any previous versions of app.
   */
  desktop.modules.uninstall:/modules/{0}/
    :x:(/../*/local-url|/@.defaults/*/local-url)/$?value

  /*
   * Unzipping app's zip file into "/modules/" folder.
   *
   * TODO: Verify zip file contains exactly one folder and no additional files.
   */
  unzip:x:/../*/_arg?value
    dest:/modules/

  /*
   * Then renaming folder for our unzip operation to app's friendly folder name.
   *
   * However, we only do this, if the app's zip file contained a folder that had
   * a different name than what was expected.
   */
  if:x:/@unzip/0?name
    !=:/modules/{0}/
      :x:(/../*/local-url|/@.defaults/*/local-url)/$?value

    /*
     * The folder our [unzip] operation created was different than the folder
     * we want to actually host our app within.
     *
     * Hence, we rename the folder, before we proceed.
     */
    move-folder:x:/@unzip/0?name
      dest:/modules/{0}/
        :x:(/../*/local-url|/@.defaults/*/local-url)/$?value

  /*
   * Then evaluating any installation and startup Hyperlambda file for our newly installed app,
   * if there exists such a thing.
   */
  if
    fetch:x:/0/0?value
      file-exists:/modules/{0}/install.hl
        :x:(/../*/local-url|/@.defaults/*/local-url)/$?value
    micro.evaluate.file:/modules/{0}/install.hl
      :x:(/../*/local-url|/@.defaults/*/local-url)/$?value
  if
    fetch:x:/0/0?value
      file-exists:/modules/{0}/startup.hl
        :x:(/../*/local-url|/@.defaults/*/local-url)/$?value
    micro.evaluate.file:/modules/{0}/startup.hl
      :x:(/../*/local-url|/@.defaults/*/local-url)/$?value
