/*
 * Creates the extension widget that displays meta information for all files
 * recursively beneath some specified **[folder]** argument.
 */
create-event:desktop.help.widgets.file-meta

  /*
   * Sanity checking invocation.
   */
  micro.lambda.contract.min:x:/..
    folder:string

  /*
   * Returns widget to caller.
   */
  eval-x:x:/+/**/.folder|/+/*/*/*/button/*/innerValue
  return
    container
      widgets
        button
          innerValue:Retrieve meta information for {0}
            :x:/../*/folder?value
          onclick

            /*
             * Retrieving parent widget's first 'ol' child, and setting it to visible.
             */
            p5.web.widgets.get-parent:x:/../*/_event?value
            set-widget-property:x:/-/*/*?value
              class:air-inner rounded success
            p5.web.widgets.find:x:/-2/*/*?value
              element:ol
            set-widget-property:x:/-/*/*?value
              visible:true

            /*
             * Figuring out total node count for entire folder, and displaying to user.
             */
            .folder:x:/../*/folder?value
            desktop._list-files:x:/-?value
            load-file:x:/-/*?name
              convert:false
            hyper2lambda:x:/@load-file/*?value
              keep-comments:true
            create-widget
              parent:x:/@p5.web.widgets.get-parent/*/*?value
              position:1
              element:h4
              innerValue:Folder's total node count {0}
                :x:/@hyper2lambda/**?count
            create-widget
              parent:x:/@p5.web.widgets.get-parent/*/*?value
              position:2
              element:h4
              innerValue:Folder's total comment count {0}
                :x:/@hyper2lambda/**/\..comment?count

            /*
             * Deleting button.
             */
            delete-widget:x:/../*/_event?value

        ol
          visible:false
          events

            /*
             * Returns all Hyperlambda files recursively from the given folder.
             */
            desktop._list-files
              add:x:/../*/return
                list-files:x:/../*/_arg?value
                  filter:.hl
              list-folders:x:/../*/_arg?value
              for-each:x:/-/*?name
                add:x:/../*/return
                  desktop._list-files:x:/@_dp?value
              return

          oninit

            /*
             * Forward evaluated above.
             */
            .folder:x:/../*/folder?value

            /*
             * Retrieving all Hyperlambda files recursively inside of folder.
             */
            p5.io.unroll-path:x:/@.folder?value
            desktop._list-files:x:/@p5.io.unroll-path?value

            /*
             * Creating one "li" element for each file, with its description, if existing.
             */
            for-each:x:/@desktop._list-files/*?name
              load-file:x:/@_dp?value
                convert:false
              hyper2lambda:x:/@load-file/*?value
                keep-comments:true

              /*
               * Checking if file contains a descriptive comment, and if so, creating one "li" element containing its
               * description.
               */
              if
                hyper-ide.is-open

                /*
                 * Hyper IDE is running, making sure allow for clicking file path to edit file.
                 */
                insert-before:x:/../**/create-widget/*/widgets/0
                  src
                    a
                      href:#
                      innerValue:x:/@_dp?value
                      style:"display:inline-block;margin-bottom:1rem;"
                      onclick
                        get-widget-property:x:/../*/_event?value
                          innerValue
                        hyper-ide.folder-explorer.select-path:x:/-/*/*?value

              else

                /*
                 * Hyper IDE is not running, simply adding a label widget to "li" widget.
                 */
                insert-before:x:/../**/create-widget/*/widgets/0
                  src
                    label
                      innerValue:x:/@_dp?value

              if:x:/@hyper2lambda/0?name
                =:..comment

                /*
                 * File contains an initial comment.
                 */
                markdown2html:x:/@hyper2lambda/0?value
                eval-x:x:/+/*/*/*/innerValue
                create-widget
                  parent:x:/../*/_event?value
                  element:li
                  widgets
                    div
                      innerValue:x:/@markdown2html?value

              else

                /*
                 * No initial comment in file.
                 */
                create-widget
                  parent:x:/../*/_event?value
                  element:li
                  widgets
                    div
                      class:air-inner rounded warning
                      innerValue:<p>File does not contain information about what it does!</p>

          widgets
