
/*
 * File responsible for launching the "Bazar".
 */





/*
 * Including Micro CSS and main CSS file for Bazar.
 */
micro.css.include
p5.web.include-css-file:@BAZAR/media/main.css





/*
 * Making sure main container has the "container" CSS class from Micro.
 */
set-widget-property:cnt
  class:container





/*
 * In case user chooses to install an app he needs to pay for, we need to ensure PayPal's JavaScript
 * file is included in the main initial loading of our page.
 */
micro.widgets.paypal-button.ensure-checkout-js





/*
 * Retrieving available apps.
 */
bazar.bazars.get-apps





/*
 * Storing the app's "root" URL for later references, to allow us to create relative
 * URLs and hyperlinks.
 */
_app-root-url
p5.io.unroll-path:@BAZAR/
split:x:/-?value
  =:/
set:x:/@_app-root-url?value
  src:/{0}/
    :x:/@split/0/-?name





/*
 * Looping through each available Bazar.
 */
for-each:x:/@bazar.bazars.get-apps/*

  /*
   * Looping through each available app, checking if its condition is not met,
   * at which point the app is not installed, and we can add it to our [create-widget]
   * invocation below, allowing user to install the app.
   */
  _first:bool:true
  for-each:x:/@_dp/#/*/app

    /*
     * Checking "condition" of app, which basically is assumed to be an Active Event,
     * which if exists, implies the app is already installed.
     */
    _where:apps
    vocabulary:x:/@_dp/#/*/condition?value
    if:x:/-/*

      /*
       * App is already installed, since it's [condition] event was found on server from before.
       *
       * Now checking if the server's version is newer than what's locally installed.
       */
      set:x:/./*/.exe?name
        src:x:/@_dp/#/*/version/*/event?value
      .exe
      if:x:/-?value
        <:x:/@_dp/#/*/version?value

        /*
         * There's a newer version on remote server than what's locally installed on user's system.
         *
         * Making sure this app is appended into "updates" wrapper widget, and not "apps" widget.
         */
        set:x:/@_where?value
          src:updates

      else

        /*
         * App is already installed, and there are no newer versions on server.
         */
        continue

    /*
     * Checking if this is our first addition from currently iterated Bazar, and if so,
     * making sure we add an H3 header with its name.
     */
    if:x:/@_first?value
      and:x:/@_where?value
        =:apps

      /*
       * Making sure consecutive iterations doesn't add the header.
       */
      set:x:/@_first?value
        src:bool:false

      /*
       * Adding a header for the currently iterated Bazar.
       */
      p5.html.html-encode:x:/@_dp/#/./*/name?value
      eval-x:x:/+/*/*/*
      add:x:/../*/create-widget/*/widgets/*/div/*/widgets/*/div/*/widgets/=apps
        src
          h3
            class:bazar-name
            innerValue:x:/@p5.html.html-encode?value

    /*
     * HTML encoding values, to prevent man in the middle attack.
     */
    p5.html.html-encode:x:/@_dp/#/*/name?value
    p5.html.html-encode:x:/@_dp/#/*/url?value
    p5.html.html-encode:x:/@_dp/#/*/description?value
    p5.html.html-encode:x:/@_dp/#/*/author-readme?value
    markdown2html:x:/-?value
    p5.html.html-encode:x:/@_dp/#/*/price?value
    p5.html.html-encode:x:/@_dp/#/*/local-url?value
    p5.html.html-encode:x:/@_dp/#/*/version?value

    /*
     * Making sure we apply icon-image to markdown results.
     */
    html2lambda:x:/@markdown2html?value
    eval-x:x:/+/**
    insert-before:x:/@html2lambda/0
      src
        img
          @src:x:/@_dp/#/*/image?value
          @style:"max-width:30%;float:right;margin-left:1rem;margin-bottom:1rem;"
          @class:shaded rounded
    lambda2html:x:/@html2lambda/*
    set:x:/@markdown2html?value
      src:x:/@lambda2html?value

    /*
     * Adding app to [create-widget] invocation below, to allow user to install it.
     */
    eval-x:x:/+2/*/*/container/**(/literal/*/class(/=bazar-app-name|/=bazar-app-description|/=bazar-app-price)/./*/innerValue|(/onclick|/.onclick)/*(/_app-name|/_app-url|/_app-author-description|/_local-url|/_app-version|/_app-price|/_condition-event))
    eval-x:x:/+/*/*/container
    add:x:/../*/create-widget/*/widgets/*/div/*/widgets/*/div/*/widgets/={0}
      :x:/@_where?value
      src
        container:get-app-{0}
          :x:/..for-each/*/p5.html.html-encode/[5,6]?value
          element:a
          href:#
          role:button
          class:bazar-app shaded rounded air-inner button
          onclick

            /*
             * Forward evaluate above.
             */
            _app-name:x:/..for-each/*/p5.html.html-encode/[0,1]?value
            _app-url:x:/..for-each/*/p5.html.html-encode/[1,2]?value
            _app-author-description:x:/@markdown2html?value
            _local-url:x:/..for-each/*/p5.html.html-encode/[5,6]?value
            _app-version:x:/..for-each/*/p5.html.html-encode/[6,7]?value

            /*
             * Asking user to confirm installation, and initiating download and 
             * installation process.
             */
            eval-x:x:/+/**(/_url|/_local-url)
            create-widgets
              micro.widgets.modal:bazar-confirm-installation
                widgets
                  h3
                    innerValue:Confirm installation of {0}
                      :x:/@_app-name?value
                  div
                    class:rounded air-inner
                    innerValue:x:/@_app-author-description?value
                  div
                    style:"clear:both;"
                    class:right
                    widgets
                      div
                        class:strip
                        widgets
                          button
                            innerValue:Yes
                            onclick:@"return p5.bazar_download_app(event);"
                            oninit

                              /*
                               * Setting initial focus to button.
                               */
                              micro.page.set-focus:x:/../*/_event?value

                              /*
                               * Including JavaScript necessary to create a "please wait"
                               * screen, as user clicks the "Yes" button.
                               */
                              p5.web.include-javascript:@"
p5.bazar_download_app = function(e) {
  var obsc = document.createElement('div');
  obsc.id = 'bazar-obscurer';
  obsc.className = 'bazar-ajax-wait';
  var header = document.createElement('h1');
  var cnt = document.createTextNode('Please wait ...');
  header.appendChild(cnt);
  obsc.appendChild(header);
  document.body.appendChild(obsc);
  p5.$(e.currentTarget.id).raise('.onclick', {
    onsuccess:function(){
      var obsc = p5.$('bazar-obscurer').el;
      obsc.parentElement.removeChild(obsc);
    }});
  e.stopPropagation();
  return false;
}"

                            .onclick

                              /*
                               * Passing in URL to file responsible for downloading and
                               * installing the app.
                               */
                              _url:x:/@_app-url?value
                              _local-url:x:/@_local-url?value
                              _app-price:x:/..for-each/*/p5.html.html-encode/[4,5]?value
                              _condition-event:x:/@_dp/#/*/condition?value

                              /*
                               * Checking if this is our second invocation.
                               */
                              p5.web.viewstate.get:bazar.has-purchase

                              /*
                               * Checking if user already has installed an older version, at which point our [condition]
                               * event will exist, an we allow user to upgrade for free.
                               */
                              set:x:/+?name
                                src:x:/@_condition-event?value
                              foo
                              if:x:/-/*
                                not
                                and:x:/@_app-price?value
                                  !=:Free
                                and:x:/@p5.web.viewstate.get/*?value
                                  not

                                /*
                                 * User needs to be guided through purchasing process.
                                 */
                                eval-x:x:/+/*/*/*/h3/*/innerValue|/+/**(/micro.widgets.paypal-button/*(/price|/.onok/*/_widget))
                                create-widgets
                                  micro.widgets.modal:bazar-purchase
                                    widgets
                                      h3
                                        innerValue:This module will cost you €{0}
                                          :x:/@_app-price?value
                                      p
                                        innerValue:Do you wish to proceed?
                                      micro.widgets.paypal-button
                                        currency:EUR
                                        price:x:/@_app-price?value
                                        custom:Bazar purchase
                                        .onok

                                          /*
                                           * Forward evaluated above, to allow us to re-raise [.onclick] after a successful
                                           * purchase.
                                           */
                                          _widget:x:/../*/_event?value

                                          /*
                                           * Re-raising our [.onclick] on the main button widget, now after having set
                                           * our ViewState value, which will force installation of our app.
                                           */
                                          p5.web.viewstate.set:bazar.has-purchase
                                            src:bool:true

                                          /*
                                           * Deleting purchasing modal widget.
                                           */
                                          delete-widget:bazar-purchase

                                          /*
                                           * Re-raising widget's event, to go through download process.
                                           */
                                          p5.web.widgets.ajax-events.raise:x:/@_widget?value
                                            .onclick

                                /*
                                 * Returning early to abort evaluation of the rest of our file.
                                 */
                                return

                              /*
                               * Deleting purchase ViewState value.
                               */
                              p5.web.viewstate.set:bazar.has-purchase

                              /*
                               * Making sure we trap any exceptions occurring during installation process.
                               */
                              try
                                eval-x:x:/+/*
                                bazar.install-bazar-app
                                  url:x:/@_url?value
                                  local-url:x:/@_local-url?value

                                /*
                                 * Redirecting user to desktop, after installation process is
                                 * finished.
                                 */
                                p5.web.get-root-location
                                p5.web.set-location:x:/-?value

                              catch

                                /*
                                 * Destroying old modal window, and creating a new one, displaying our error.
                                 */
                                delete-widget:bazar-confirm-installation
                                eval-x:x:/+/**/innerValue
                                create-widgets
                                  micro.widgets.modal:bazar-error-installation
                                    widgets
                                      h3
                                        innerValue:Oops ...!!
                                      p
                                        innerValue:x:/@message?value
                                      div
                                        class:right
                                        widgets
                                          button
                                            innerValue:OK
                                            oninit
                                              micro.page.set-focus:x:/../*/_event?value
                                            onclick
                                              delete-widget:bazar-error-installation

                          button
                            innerValue:No
                            onclick

                              /*
                               * Simply deleting modal widget.
                               */
                              delete-widget:bazar-confirm-installation

          widgets
            literal
              class:bazar-app-name
              innerValue:x:/..for-each/*/p5.html.html-encode/[0,1]?value
            literal
              class:bazar-app-description
              innerValue:x:/..for-each/*/p5.html.html-encode/[2,3]?value
            literal
              class:bazar-app-price
              innerValue:€{0}
                :x:/..for-each/*/p5.html.html-encode/[4,5]?value





/*
 * Checking if user have all apps installed, and if so, giving him a simple
 * notification about that.
 */
if:x:/../*/create-widget/*/widgets/*/div/*/widgets/*/div/*/widgets(/=apps|/=updates)/*
  not

  /*
   * User have all apps already installed, informing him about that fact in a modal widget,
   * and returning early, while also encouraging developers to start creating apps.
   */
  create-widget
    class:row
    widgets
      div
        class:col
        widgets
          div
            class:rounded shaded bg air-inner
            style:"margin:5% auto;max-width:800px;"
            widgets
              h3
                innerValue:Install apps and modules
              p
                innerValue:@"If you have a zip file, containing an app or a module, you can install it by clicking the upload button."





/*
 * Creating actual Bazar widget, wrapping all available apps from Bazar, making sure we also set page's
 * title in the process.
 */
p5.web.page.set-title:The Bazar
create-widget
  position:0
  class:row
  widgets
    div
      class:col
      widgets

        /*
         * Add Bazar, home button, and upload app wrapper.
         */
        div
          class:bazar-add
          widgets
            div
              class:right
              widgets
                div
                  class:strip toolbar
                  widgets
                    micro.widgets.upload-button
                      class:large
                      title:Upload and install an app from a zip file
                      accept:.zip
                      .onupload

                        /*
                         * Installing app(s).
                         */
                        for-each:x:/../*/files/*
                          split:x:/@_dp/#/*?value
                            =:.
                          set:x:/@split/0/-
                          join:x:/@split/*
                            sep:.
                          eval-x:x:/+/*/local-url
                          desktop.modules.install:x:/@_dp/#?value
                            local-url:x:/@join?value

                        /*
                         * Providing some feedback to user.
                         */
                        micro.windows.info:{0} app(s) successfully installed
                          :x:/../*/files/*?count
                          class:micro-windows-info success

                    button
                      innerValue:@"<span class=""icon-bin""></span>"
                      title:Uninstall apps
                      onclick

                        /*
                         * Evaluating file responsible for allowing user to uninstall apps.
                         */
                        micro.evaluate.file:/modules/bazar/helpers/uninstall-apps.hl

                    a
                      href:/
                      role:button
                      class:button
                      innerValue:@"<span class=""icon-home3""></span>"

        /*
         * Bazar(s) updates wrapper.
         */
        div
          style:"clear:both;"
          class:bazar-wrapper bazar-updates-wrapper
          widgets:updates
          oninit

            /*
             * Checking if there are any widgets inside of current widget, and if so, we have updates, at which
             * point we make sure the current widget is given a header.
             */
            p5.web.widgets.get-children:x:/../*/_event?value
            if:x:/@p5.web.widgets.get-children/*/*

              /*
               * There are updates that could be installed, making sure we create an h3 header, signaling that fact to
               * user.
               */
              create-widget
                position:0
                parent:x:/../*/_event?value
                element:h3
                innerValue:Updates
                class:bazar-name

        /*
         * Bazar(s) apps wrapper.
         */
        div
          style:"clear:both;"
          class:bazar-wrapper
          widgets:apps





/*
 * Checking if we have a query parameter, specifying a specific app for installation.
 */
p5.web.query.get:app
if:x:/@p5.web.query.get/*?value

  /*
   * Checking that app actually exists in available app list.
   */
  if
    fetch:x:/0/0?value
      widget-exists:get-app-{0}
        :x:/@p5.web.query.get/*?value
    not

    /*
     * Informing user that app is already installed, and returning early.
     */
    micro.windows.info:Requested app is already installed
      class:micro-windows-info success
    return

  /*
   * App is not installed, it exists, and it was requested by URL query parameter.
   *
   * Hence, displaying its "purchase" information.
   */
  p5.web.widgets.ajax-events.raise:get-app-{0}
    :x:/@p5.web.query.get/*?value
    onclick
