

/*
 * Initialises server, by allowing user to set server salt, and/or set root password.
 *
 * If the server needs to be setup before allowing the user to proceed to your app, or the micro web os desktop,
 * this event will return "true".
 */
if
  p5.auth._has-salt
  not

  /*
   * No server salt, asking user to provide one.
   */
  create-widget
    widgets

      /*
       * First some description.
       */
      h3
        innerValue:Please provide a random server salt
        style:"width:50%;margin-left:auto;margin-right:auto;"
      p:salt-description
        innerValue:You don't need to remember your salt, but to maximise the security of your system, it should to be as random as possible.
        style:"width:50%;margin-left:auto;margin-right:auto;"
      p:salt-description-2
        innerValue:The server salt is used to hash your passwords, in addition to seed the random number generator, when cryptographically secure random number are needed.
        style:"width:50%;margin-left:auto;margin-right:auto;"

      /*
       * Then our textarea, which actually allows the user to type in a salt.
       */
      literal:server-salt
        element:textarea
        placeholder:Provide a random server salt ...
        rows:10
        style:"display:block;width:50%;margin-left:auto;margin-right:auto;"

      /*
       * Wrapper for our "save" server salt button.
       */
      div
        style:"width:50%;margin-left:auto;margin-right:auto;text-align:right;"
        widgets
          button
            innerValue:Save
            onclick

              /*
               * Retrieving server salt, and setting it.
               */
              get-widget-property:server-salt
                value
              if:x:/@get-widget-property/*/*?value
                =:

                /*
                 * No salt, cannot proceed ...
                 */
                set-widget-property:salt-description
                  innerValue:@"<strong>Please provide a server salt!!</strong>"
                return

              /*
               * Setting salt.
               */
              p5.auth._set-server-salt:x:/@get-widget-property/*/*?value

              /*
               * Reloading URL for simplicity, which will ask the user for a root password.
               */
              p5.web.reload-location

  /*
   * Returning true to caller, to signal that server is in setup/initialize phase.
   */
  return:bool:true

else-if
  p5.auth._root-password-is-null

  /*
   * Root password is null, asking user to provide one.
   */
  create-widget
    widgets

      /*
       * First some description.
       */
      h3
        innerValue:Please provide a root password
        style:"width:50%;margin-left:auto;margin-right:auto;"
      p:root-description
        innerValue:Please make sure you remember your password, otherwise you will not be able to access your system!
        style:"width:50%;margin-left:auto;margin-right:auto;"

      /*
       * Then our textbox widgets, asking user to provide a root password for his system.
       */
      input:root-password
        type:password
        placeholder:Root password ...
        style:"display:block;width:50%;margin-left:auto;margin-right:auto;"
      input:root-password-repeat
        type:password
        placeholder:Repeat password ...
        style:"display:block;margin-top:15px;width:50%;margin-left:auto;margin-right:auto;"

      /*
       * Then the "save root password" button wrapper.
       */
      div
        style:"width:50%;margin-left:auto;margin-right:auto;text-align:right;margin-top:15px;"
        widgets
          button
            innerValue:Save
            onclick

              /*
               * Retrieving password(s), making sure they're not empty, and that they match.
               */
              get-widget-property:root-password
                value
              get-widget-property:root-password-repeat
                value
              if:x:/../*/get-widget-property/*/root-password/*?value
                =:
                or:x:/../*/get-widget-property/*/root-password/*?value
                  !=:x:/../*/get-widget-property/*/root-password-repeat/*?value

                /*
                 * Password were not given, or textbox values did not match.
                 */
                set-widget-property:root-description
                  innerValue:@"<strong>Provide a password, and make sure you repeat it exactly!!</strong>"
                return

              /*
               * Setting password.
               */
              eval-x:x:/+/*
              p5.auth._set-root-password
                password:x:/@get-widget-property/*/*?value

              /*
               * Automatically logging in user.
               *
               * Notice, in case there's a bug occurring during the rest of our setup process,
               * we need to explicitly persist the credentials, since otherwise the user cannot
               * continue with his setup process, after having fixed his bug, since the rest of
               * our server setup process, is dependent upon that the user is logged into his system.
               *
               * We fix this though, by explicitly logging user out after the setup process is finished,
               * to destroy the persistent cookie, to further tighten the system's security.
               */
              login
                username:root
                password:x:/@get-widget-property/*/*?value
                persist:true

              /*
               * Reloading URL for simplicity, since we're now done with setting up server.
               */
              p5.web.reload-location

  /*
   * Returning true to caller, to signal that server is in setup/initialize phase.
   */
  return:bool:true





/*
 * Returning false to caller, to signal that the server salt and root password has already been setup.
 */
return:bool:false
