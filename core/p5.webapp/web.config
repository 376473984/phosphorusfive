<?xml version="1.0"?>
<configuration>
  <!--
       Configuration section for Phosphorus Five
       -->
  <configSections>
    <section name="phosphorus" type="p5.webapp.code.configuration.PhosphorusConfiguration" />
  </configSections>
  <!--
      assemblyDirectory = Folder on disc where we can find Assemlbies to register as Active Event handlers. 
      Tilde (~) will be replaced by AppDomain root directory

      defaultContextUsername = Context user which to invoke Active Events on behalf, unless another user 
      is explicitly logged in

      defaultContextRole = Role which will be associated with defaultContextUsername user, unless another 
      user, with another role, is explicitly logged in

      passwordFile = Path to file on disc that will be used for usernames/passwords and roles. Tilde (~)
      will be replaced by AppDomain root directory

      loginCoolOffSeconds = Number of seconds that must pass from an unsuccessful login attempt, to the same
      IP address is allowed to try to login again

      persistCredentialCookieDays = How many days a cookie for user will be saved on disc before invalidated, 
      and user must login again
      -->
  <phosphorus 
    assemblyDirectory="~/bin/" 
    defaultContextUsername="guest" 
    defaultContextRole="guest" 
    authFile="~/auth" 
    loginCoolOffSeconds="30" 
    persistCredentialCookieDays="90" 
    smtpServer="smtp.gmail.com" 
    smtpPort="465" 
    smtpUseSsl="true" 
    smtpUsername="phosphorusfive@gmail.com" 
    smtpPassword="password" 
    pop3Server="pop.gmail.com" 
    pop3Port="995" 
    pop3UseSsl="true" 
    pop3Username="phosphorusfive@gmail.com" 
    pop3Password="password">
    <!--
        Assemblies that will be registered as Active Event handlers
        -->
    <assemblies>
      <add assembly="p5.types" />
      <add assembly="p5.lambda" />
      <add assembly="p5.hyperlisp" />
      <add assembly="p5.threading" />
      <add assembly="p5.io" />
      <add assembly="p5.io.authorization" />
      <add assembly="p5.io.zip" />
      <add assembly="p5.data" />
      <add assembly="p5.net" />
      <add assembly="p5.web" />
      <add assembly="p5.html" />
      <add assembly="p5.math" />
      <add assembly="p5.crypto" />
      <add assembly="p5.security" />
      <add assembly="p5.mail" />
      <add assembly="p5.mime" />
    </assemblies>
  </phosphorus>
  <!--
       Application settings.
       -->
  <appSettings>
    <!--
        The next setting, defines how many ViewState values will be stored in session for each session object.
        If your users are notified often that there was too many viewstate values for the current session, and 
        that their current ViewState key was invalidated, you might consider increasing this value. If you 
        increase it though, the amount of memory used for each session object in your application, will increase, 
        and hence the memory usage of your application, will increase. A good number os probably between 5 and 10.
        If you set it to 0, then no ViewState will be stored in the session. This is a major security risk, due to
        the internals of Phosphorus Five, and how it stores p5 lambda objects for Web Widgets in the ViewState.
        If you set it to -1, then the number of ViewState objects per session becomes infinite, which is also a major
        security risk, since then any session can easily use up all memory of your server, simply by pressing F5 many times.
        -->
    <add key="viewstate-per-session-entries" value="5" />
    <!--
        The next setting tells Phosphorus Five which Hyperlisp file to execute during startup of your application.
        Normally this file should at the very least create one Active Event, needed as a hook, name [p5.web.create-ui].
        This Active Event is raised by Phosphorus Five during the beginning of a HTTP request, and is expected to load
        the User Interface, or do other things, dependent upon which type of web-server you're setting up.
        
        The default file provided out of the box, initializes "System42", which is a minimalistic example of how
        you could create a Content Management System with a powerful administration user interface.
        -->
    <add key="application-startup-file" value="/system42/application-startup.hl" />
    <!--
        The next three settings as for the [p5.data.xxx] namespace. See phoshorus.data documentation to understand how they work.
        -->
    <add key="database-path" value="~/db/" />
    <add key="database-nodes-per-file" value="32" />
    <add key="database-files-per-directory" value="256" />
    <!--
        The next settings are for your MongoDB installation. Please notice that the MongoDB drivers are not 100% stable in
        Phosphorus Five, and is to be considered "work in progress".
        -->
    <add key="mongodb-connection-string" value="mongodb://localhost" />
    <add key="mongodb-database" value="phosphorus" />
  </appSettings>
  <system.web>
    <compilation defaultLanguage="C#" debug="true" targetFramework="4.0">
      <assemblies>
      </assemblies>
    </compilation>
    <customErrors mode="RemoteOnly" />
    <authentication mode="None" />
    <authorization>
      <allow users="*" />
    </authorization>
    <trace enabled="false" localOnly="true" pageOutput="false" requestLimit="10" traceMode="SortByTime" />
    <sessionState mode="InProc" cookieless="false" timeout="20" />
    <globalization requestEncoding="utf-8" responseEncoding="utf-8" />
    <!--
         making sure we're using static IDs for controls and making sure 'p5' is prefix for phosphorus.ajax controls
         -->
    <pages clientIDMode="Static">
      <controls>
        <!--
             making it easy to include phosphorus.ajax controls in .aspx pages
             -->
        <add assembly="p5.ajax" namespace="p5.ajax.widgets" tagPrefix="p5" />
      </controls>
    </pages>
    <httpRuntime requestValidationMode="2.0" />
    <httpHandlers>
      <add verb="*" path="*.hl" type="System.Web.HttpForbiddenHandler" />
    </httpHandlers>
  </system.web>
  <system.webServer>
    <handlers>
      <!--
          Making sure we deny serving Hyperlisp files
          -->
      <add name="HyperlispDeny" verb="*" path="*.hl" type="System.Web.HttpForbiddenHandler" />
      <!--
          Making sure we deny serving "auth" file
          -->
      <add name="AuthDeny" verb="*" path="auth" type="System.Web.HttpForbiddenHandler" />
    </handlers>
  </system.webServer>
</configuration>